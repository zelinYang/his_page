<script>
    var dicSysUser = JSON.parse('$dicTools.changeMapToJson($dicData.dicSysUser)');
    var dicSysOrgName = JSON.parse('$dicTools.changeMapToJson($dicData.dicSysOrgName)');
    var dicDoctorOrderType = JSON.parse('$dicTools.changeMapToJson($dicData.dicDoctorOrderType)');
    var query;
    var tableData = [];
    layui.use(['jquery', 'table', 'laypage', 'element', 'form'], function () {
        var table = layui.table;
        var element = layui.element;
        var form = layui.form;
        var laypage = layui.laypage;
        var $ = layui.$;
        element.render();



        //初始化查询表单
        $("#keyWord").val($(":focus", parent.document).val());
        if(!$("#doctorOrderTypeLeftLike").val()) {
            $("#doctorOrderTypeLeftLike").val($(":focus", parent.document).parents("tr").find('[name="doctorOrderType"]').val());
        }

        //第一个实例
        var tableIns = table.render({
            elem: '#basChargeItemTable'
            //,toolbar: '#toolbarDemo'
            , defaultToolbar: []
            //,height: '230'//高度
            , height: '320'//高度
            , url: '../bas/basChargeItemListData.jo' //数据接口
            , where: getQueryParams()
            , limit: 50
            , request: {
                pageName: 'pageNumber' //页码的参数名称，默认：page
                , limitName: 'pageSize' //每页数据量的参数名，默认：limit
            }
            , cols: [[ //表头
                //{type:'checkbox'}
                { width : 40, templet: '#operateFormatter',event:'select'}
                ,{field: 'chargeName', title: '项目名称',minWidth: 300}
                , {field: 'remark', title: '规格/备注',}
                , {field: 'doctorOrderType',title:'医嘱项目类型',
                    templet: function (d) {
                        return dicDoctorOrderType[d.doctorOrderType] || '';
                    },minWidth:'80'}
                ,{
                    field: 'chargeItemCount',
                    width: 100,
                    title: '数量'
                }
                , {field: 'chargeItemUnit', title: '单位'}
                , {field: 'unitPrice', title: '单价'}
            ]]
            //res = 如果是异步请求数据方式，res即为你接口返回的信息。 curr = 当前页码   count= 得到数据总量
            , done: function (res, curr, count) {
                tableData = res.data;
                var firstTr = $('div[lay-id="basChargeItemTable"]').find("table tbody tr").first();
                //标注选中样式，初始默认选中第一行
                firstTr.addClass('layui-table-click').siblings().removeClass('layui-table-click');
                //绑定表格的键盘事件
                bindKeyBoard();
            }
        });

        // 查询按钮
        $('#btn_query').click(function () {
            query();
        });

        //查询列表
        query = function () {
            if(!$("#doctorOrderTypeLeftLike").val()) {
                $("#doctorOrderTypeLeftLike").val($(":focus", parent.document).parents("tr").find('[name="doctorOrderType"]').val());
            }
            tableIns.reload({where: getQueryParams()});
        }

        //获取查询数据
        function getQueryParams() {
            return $.extend({
                keyWord: '',
                doctorOrderTypeLeftLike: ''
            }, common.serializeObject($('#basChargeItem_queryForm')));
        }


        //监听行单击事件
        table.on('row(basChargeItemTable)', function (obj) {
            var row = obj.data;
            parent.basChargeItemRowSelect(row);
        });
        //监听工具栏事件
        table.on('tool(basChargeItemTable)', function (obj) {
            if(obj.event === 'select'){
                var row = obj.data;
                parent.basChargeItemRowSelect(row);
            }
        });
        //绑定键盘事件
        function bindKeyBoard() {
            $(document).keydown(function (event) {
                var tbodyElement;
                var currTr;
                var currTrIndex;
                if (event.keyCode == 13 || event.keyCode == 38 || event.keyCode == 40) {
                    tbodyElement = $('div[lay-id="basChargeItemTable"]').find("table tbody");
                    currTr = tbodyElement.find(".layui-table-click");
                    currTrIndex = currTr.attr("data-index");
                }
                if (event.keyCode == 38) {//上键：选中上一行
                    if (currTrIndex == 0) {
                        return;
                    }
                    currTr.prev("tr").addClass('layui-table-click').siblings().removeClass('layui-table-click');
                } else if (event.keyCode == 40) {//下键：选中下一行
                    if (currTr.next("tr").length == 0) {
                        return;
                    }
                    currTr.next("tr").addClass('layui-table-click').siblings().removeClass('layui-table-click');

                } else if (event.keyCode == 13) {//回车选择当前选中行
                    parent.basChargeItemRowSelect(tableData[currTrIndex]);
                }
                var newClickTr = tbodyElement.find(".layui-table-click");
                /*  上下键偏移量控制
                $(currTr).parents('.layui-table-body').animate({
                    scrollTop: newClickTr.offset().top-35
                }, 1);
                */
            });
        }


    });//layui.use
</script>