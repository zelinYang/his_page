<!DOCTYPE html>
<html>
<head>
    <title>${SessionSysPortal.appTitle}-病种类型选择树</title>
    #parse("./common/pageCss.vm")
    #parse("./common/pageJs.vm")
    <link href="../resource/layuiadmin/modules/ztree/css/zTreeStyle/zTreeStyle.css" rel="stylesheet">
    <style type="text/css">

        .tree {
            height: calc(100vh - 90px);
            overflow-y: auto;
            overflow-x: auto;
        }
        .layui-card-header {
            padding: 0;
        }
        .layui-card-header .caller-seach{
            display: inline-block;
            width: calc(100% - 121px);
        }
        .layui-card-header .caller-seach i.layui-icon{
            right: 130px;
        }
        .layui-card-header .layui-btn-group i.layui-icon {
            position: initial;
            line-height: inherit;
        }

    </style>
</head>
<body>
<div class="layui-content-wrapper">
    <div class="layui-card">
        <div class="layui-card-header">
            <div class="layui-form caller-seach" action="">
                <input type="text" id="q_diseaseClassifyName" placeholder="请输入疾病分类"
                       autocomplete="off" class="layui-input caller-pl32" autofocus="autofocus">
                <i class="layui-icon layui-icon-close caller-dump-icon caller-icon"  lay-tips="清空"></i>
            </div>
            <div class="layui-btn-group">
                <button type="button" class="layui-btn layui-btn-primary layui-btn-sm" lay-tips="查询" id="btn_query_type">
                    <i class="layui-icon">&#xe615;</i>
                </button>
            </div>
        </div>
        <div class="layui-card-body tree">
            <ul id="regionTree" class="ztree"></ul>
        </div>
    </div>
    <div class="tool-bottom-fixed">
        <button type="button" id="btn_select" class="layui-btn layui-btn-sm">确 认
        </button>
        <button type="button" id="btn_noneSelect" class="layui-btn layui-btn-sm">
            取消选择
        </button>
        <button type="button" id="btn_close" class="layui-btn layui-btn-sm">
            关闭
        </button>
    </div>
</div>
<!-- 本页面js -->
<script src="../resource/layuiadmin/modules/ztree/js/jquery.ztree.all.min.js"></script>
<script>
    /**
     * 疾病分类与代码
     * 前3位编码为ICD-10类目码。
     * 前4位编码为ICD-10亚目码。4位亚目码是3位码的亚分类。
     * 第5-6位数为扩展码。
     * 6位代码之后自行扩展尾码
     */
        //前3位编码为ICD-10类目码。
    var DISEASE_CLASSIFY_LEVEL_CATEGORY = "$!{CONST.AppConstants.DISEASE_CLASSIFY_LEVEL_CATEGORY}";
    //前4位编码为ICD-10亚目码。4位亚目码是3位码的亚分类。
    var DISEASE_CLASSIFY_LEVEL_SUBORDER = "$!{CONST.AppConstants.DISEASE_CLASSIFY_LEVEL_SUBORDER}";
    //疾病分类与代码
    var DIC_TYPE_DISEASE_CLASSIFY = "$!{CONST.AppConstants.DIC_TYPE_DISEASE_CLASSIFY}";
    //疾病分类与代码
    var DIC_TYPE_DISEASE_CLASSIFY_TCM = "$!{CONST.AppConstants.DIC_TYPE_DISEASE_CLASSIFY_TCM}";
    //疾病分类级别西医
    var dicDiseaseClassifyLevel = JSON.parse('$dicTools.changeMapToJson($dicData.dicDiseaseClassifyLevel)');
    //疾病分类级别中医
    var dicDiseaseClassifyTcmLevel = {
        1:2,
        2:3
    };
    window.jsonpCallback = function(jsonpCallback){
        window.jsonpCallback = jsonpCallback;
    }
    layui.config({
        base: '../resource/layuiadmin/'
    }).extend({
        index: 'lib/index'
    }).use(['index', 'form', 'table', 'element', 'element'], function () {
        var $ = layui.$, form = layui.form, table = layui.table, element = layui.element;

        //回车触发查询
        $("#q_diseaseClassifyName").keydown(function (event) {
            if (event.keyCode == 13) {
                $('#btn_query_type').click();
                return false;
            }
        });
        //清空 疾病分类
        $('.caller-icon').click(function () {
            $("#q_diseaseClassifyName").val("");
        })
        //查询疾病分类
        $("#btn_query_type").click(function () {
            var diseaseClassifyName = $("#q_diseaseClassifyName").val();
            refreshRootNode(diseaseClassifyName);
        })
        //过滤数据
        function filter(treeId, parentNode, result) {
            var childNodes = result.data;
            if (!childNodes) return null;
            $.each(childNodes, function (index, item) {
                //判断是否是最大级别的最大长度
                item.isParent = getDiseaseClassifyIsParent(item.dicTypeId ,item.dicCode.length);
                item.name = item.dicName +' '+ item.dicCode;
            })
            return childNodes;
        }

        //根据疾病类别 中医、西医 获取对于的树形长度
        function getDiseaseClassifyLevel(dicTypeId, level){
            if(dicTypeId == DIC_TYPE_DISEASE_CLASSIFY){
                return dicDiseaseClassifyLevel[level + 1] || '';
            }
            if(dicTypeId == DIC_TYPE_DISEASE_CLASSIFY_TCM){
                return dicDiseaseClassifyTcmLevel[level + 1] || '';
            }
        }
        //根据疾病类别 中医、西医 获取是否是父级
        function getDiseaseClassifyIsParent(dicTypeId, len){
            if(dicTypeId == DIC_TYPE_DISEASE_CLASSIFY){
                return !(len >= DISEASE_CLASSIFY_LEVEL_SUBORDER);
            }
            if(dicTypeId == DIC_TYPE_DISEASE_CLASSIFY_TCM){
                return !(len >= dicDiseaseClassifyTcmLevel[2]);
            }
        }
        //展开事件
        function zTreeBeforeExpand(treeId, treeNode) {
            zTreeObj.setting.async.otherParam.dicTypeId = treeNode.dicTypeId;
            //获取下一个级别的长度
            zTreeObj.setting.async.otherParam.dicCodeLenNotSymbolEqu = getDiseaseClassifyLevel(treeNode.dicTypeId, treeNode.level);
        };

        //单击事件
        function onClick(event, treeId, treeNode) {
            if (treeNode.level == 0) {
                common.msg("不能选择根节点", 0);
                zTreeObj.cancelSelectedNode(); //取消所有选中
            }
        }
        function zTreeOnDblClick(event, treeId, treeNode) {
            if (treeNode.level == 0) {
                common.msg("不能选择根节点", 0);
                zTreeObj.cancelSelectedNode(); //取消所有选中
            } else {
                window.jsonpCallback(treeNode);
                $("#btn_close").click();
            }

        };

        /**
         * 刷新根结点树
         */
        window.refreshRootNode = function (diseaseClassifyName) {
            var nodes = zTreeObj.getNodes();
            zTreeObj.setting.async.otherParam.keyWord = diseaseClassifyName;
            if(!diseaseClassifyName){
                $.each(nodes,function (i, node) {
                    zTreeObj.removeChildNodes(node);
                    node.zAsync = false;
                    node.isParent = true;
                    zTreeObj.updateNode(node);
                })
                zTreeObj.expandAll(Boolean(diseaseClassifyName));
                return;
            }
            zTreeObj.selectNode(nodes[0], true); //选中第一个子节点
            zTreeObj.setting.async.otherParam.dicTypeId = nodes[0].dicTypeId;
            zTreeObj.setting.async.otherParam.dicCodeLenNotSymbolEqu = getDiseaseClassifyLevel(nodes[0].dicTypeId, 0);
            refreshNode({type: "refresh", silent: false});
            zTreeObj.selectNode(nodes[1], true); //选中第二个子节点
            zTreeObj.setting.async.otherParam.dicTypeId = nodes[1].dicTypeId;
            zTreeObj.setting.async.otherParam.dicCodeLenNotSymbolEqu = getDiseaseClassifyLevel(nodes[1].dicTypeId, 0);
            refreshNode({type: "refresh", silent: false});
            zTreeObj.cancelSelectedNode(); //取消所有选中

        }

        //刷新子节点
        function refreshNode(data) {
            var type = data.type,
                silent = data.silent,
                nodes = zTreeObj.getSelectedNodes();
            if (nodes.length == 0) {
                alert("请先选择一个父节点");
            }
            for (var i = 0, l = nodes.length; i < l; i++) {
                zTreeObj.reAsyncChildNodes(nodes[i], type, silent);
                if (!silent) zTreeObj.selectNode(nodes[i]);
            }
        }

        // 初始化树形分类
        var zTreeObj, setting = {
            view: {
                selectedMulti: false,
                showIcon: false
            },
            data: {
                simpleData: {
                    enable: true
                }
            },
            async: {
                enable: true,
                url: '../basDic/basDicListData.jo?pageSize=99999&validFlag=1',
                otherParam: {
                    "dicCodeLenNotSymbolEqu": DISEASE_CLASSIFY_LEVEL_CATEGORY
                },
                autoParam: ["dicCode=dicCodeLK"],
                dataFilter: filter
            },
            callback: {
                beforeExpand: zTreeBeforeExpand,
                onAsyncSuccess: function (event, treeId, treeNode, msg) {
                    if (!(!!window.ActiveXObject || 'ActiveXObject' in window)) { // 非ie
                        zTreeObj.expandNode(treeNode, true, false, true, false) //只展开第一个节点
                    }
                    zTreeObj.setting.async.otherParam['includeRoot'] = false
                },
                onClick: onClick,
                onDblClick: zTreeOnDblClick
            }
        }
        //根节点
        var zNodes = [
            {"name": "西医", dicTypeId: DIC_TYPE_DISEASE_CLASSIFY,  isParent: true},
            {"name": "中医", dicTypeId: DIC_TYPE_DISEASE_CLASSIFY_TCM,isParent: true}
        ];
        zTreeObj = $.fn.zTree.init($('#regionTree'), setting, zNodes);

        $("#btn_select").click(function () {
            var nodes = zTreeObj.getSelectedNodes();
            if (nodes.length == 0) {
                common.msg("请先选择一个子节点", 0);
                return;
            }
            window.jsonpCallback(nodes[0]);
            $("#btn_close").click();
        })

        $("#btn_noneSelect").click(function () {
            window.jsonpCallback();
            $("#btn_close").click();
        })

        $("#btn_close").click(function () {
            // 关闭窗口
            var index = parent.layer.getFrameIndex(window.name);
            parent.layer.close(index);
        })
    })
</script>
</body>
</html>