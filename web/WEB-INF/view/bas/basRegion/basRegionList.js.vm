<script>
    /**
     * 行政区域编码规则
     * 第一、二位表示省（自治区、直辖市）
     * 第三、四位表示市（地区、自治州)
     * 第五、六位表示县（市辖区、县级市)
     * 第七、九位表示乡、镇（街道办事处）
     * 第十、十二位表示居委会、村委会
     */
        //第1～2位，为省级代码
    var REGION_LEVEL_PROVINCIAL = "$!{CONST.AppConstants.REGION_LEVEL_PROVINCIAL}";
    //第10～12位，为村级代码
    var REGION_LEVEL_VILLAGE = "$!{CONST.AppConstants.REGION_LEVEL_VILLAGE}";
    //行政区域级别长度
    var dicRegionLevel = JSON.parse('$dicTools.changeMapToJson($dicData.dicRegionLevel)');

    /**
     *  根据id 获取父级id 行政区域
     */
    function getParentRegionId(regionId) {
        var parentRegionId = '';
        $.each(dicRegionLevel, function (key, value) {
            if (value == regionId.length) {
                var parentLevel = dicRegionLevel[key - 1];
                parentRegionId = regionId.substr(0, parentLevel || '');
                return;
            }
        })
        return parentRegionId;
    }

    layui.config({
        base: '../resource/layuiadmin/'
    }).extend({
        index: 'lib/index'
     ,autocomplete : '/autocomplete'
    }).use(['index', 'form', 'table', 'element', 'autocomplete'], function () {
        var $ = layui.$, form = layui.form, table = layui.table, element = layui.element,autocomplete = layui.autocomplete;

        //查询长度
        var regionLevelLen = 0;

        //重载面包屑导航
        function reloadBreadcrumb(treeNode) {
            $('#region_breadcrumb').html(treeNode ? treeNode.getPath().map(function (node, level) {
                var aElem = $('<a></a>').click(function () {
                    zTreeObj.selectNode(node); //选中节点
                    setting.callback.onClick(null, zTreeObj.setting.treeId, node);
                });
                (level == treeNode.level) ? aElem.append('<cite>' + node.regionName + '</cite>') : aElem.text(node.regionName);
                return aElem;
            }) : "");
            element.render('breadcrumb');
        }

        //过滤数据
        function filter(treeId, parentNode, result) {
            var childNodes = result.data;
            if (!childNodes) return null;
            $.each(childNodes, function (index, item) {
                //判断是否是最大级别的最大长度
                item.isParent = !(item.regionId.length >= REGION_LEVEL_VILLAGE);
            })
            return childNodes;
        }

        //展开事件
        function zTreeBeforeExpand(treeId, treeNode) {
            //获取下一个级别的长度
            regionLevelLen = dicRegionLevel[treeNode.level + 1] || '';
        };

        //单击事件
        function onClick(event, treeId, treeNode) {
            reloadBreadcrumb(treeNode);
            $("#btn_query").click();
        }

        //刷新子节点
        function refreshNode(data) {
            var type = data.type,
                silent = data.silent,
                nodes = zTreeObj.getSelectedNodes();
            if (nodes.length == 0) {
                alert("请先选择一个父节点");
            }
            for (var i = 0, l = nodes.length; i < l; i++) {
                zTreeObj.reAsyncChildNodes(nodes[i], type, silent);
                if (!silent) zTreeObj.selectNode(nodes[i]);
            }
        }

        // 初始化树形分类
        var zTreeObj, setting = {
            view: {
                selectedMulti: false,
                showIcon: false
            },
            data: {
                simpleData: {
                    enable: true
                },
                key: {
                    name: "regionName"
                }
            },
            async: {
                enable: true,
                url: '../basRegion/basRegionListData.jo',
                otherParam: {
                    "regionIdLenEqu": function () {
                        return regionLevelLen
                    }
                },
                autoParam: ["regionId=regionIdLike"],
                dataFilter: filter
            },
            callback: {
                beforeExpand: zTreeBeforeExpand,
                onAsyncSuccess: function (event, treeId, treeNode, msg) {
                    if (!(!!window.ActiveXObject || 'ActiveXObject' in window)) { // 非ie
                        zTreeObj.expandNode(treeNode, true, false, true, false) //只展开第一个节点
                    }
                    zTreeObj.setting.async.otherParam['includeRoot'] = false
                },
                onClick: onClick
            }
        }
        //根节点
        var zNodes = [
            {"regionName": "全国", open: true, isParent: true}
        ];
        zTreeObj = $.fn.zTree.init($('#regionTree'), setting, zNodes);

        //刷新树
        $('#btn_refresh').click(function(){
            regionLevelLen = REGION_LEVEL_PROVINCIAL
            var nodes = zTreeObj.getNodes();
            zTreeObj.selectNode(nodes[0]); //选中第一个子节点
            reloadBreadcrumb()
            refreshNode({type: "refresh", silent: false});
            zTreeObj.cancelSelectedNode(); //取消所有选中
        }).click();
        // 获取表格高度
        function getTableHgt() {
            return ($('body').height() - $('#basRegion_queryForm').height() - ($('body').height() - $('.layui-fluid').height()) - 20 - $('.layui-card-header').height());
        }

        // 获取查询表单参数对象
        function getQueryParams() {
            var treeNode = zTreeObj.getSelectedNodes()[0];
            var regionIdLike = treeNode ? treeNode.regionId || '' : '';
            var regionIdLen = treeNode ? dicRegionLevel[treeNode.level + 1] || '' : '';
            return $.extend({
                regionIdLen: regionIdLen,
                regionName: '',
                regionIdLike: regionIdLike,
                regionCode: '',
                zipCode: '',
                latitude: '',
                longitude: ''
            }, common.serializeObject($('#basRegion_queryForm')));
        }

        // 查询按钮
        $('#btn_query').click(function () {
            var queryParams = getQueryParams();
            //执行重载
            table.reload('basRegionListGrid', {
                where: queryParams
            });
        })

        // 清空按钮
        $('#btn_clean').click(function () {
            common.cleanForm('basRegion_queryForm');
            //zTreeObj.cancelSelectedNode();
            //$("#region_breadcrumb").html('');
            $('#btn_refresh').click();
        })

        // 新增按钮
        $('#btn_add').click(function () {
            var node = zTreeObj.getSelectedNodes()[0];
            var parendRegionId = node ? node.regionId : '';
            common.open('$contextPath' + '/basRegion/BasRegionEdit.do?parendRegionId=' + parendRegionId, '行政区域表', {
                area: ['70%', '60%'],
                scroll: true
            })
        })

        ## autocomplete.render({
        ##     cache : false,
        ##     searchField : 'keyWord',
        ##     elem : $('#q_regionName')[0],
        ##     url : contextPath + '/basRegion/basRegionPageData.jo',
        ##     template_val : '{{d.regionName}}',
        ##     template_txt : '{{d.regionName}}',
        ##     onselect : function(obj) {
        ##         searchCall(obj);
        ##     }
        ## });
        ## //选中时执行的callback事件，会返回当前选中项的数据
        ## function searchCall(obj) {
        ##     $("#q_regionName").val(obj.regionName);
        ## }
        //表格设置
        table.render($.extend(basePageTable, {
            elem: '#basRegionListGrid',
            height: getTableHgt(),
            url: contextPath + '/basRegion/basRegionPageData.jo',
            where: getQueryParams(),
            cols: [[{
                type: 'numbers'
            }, {
                field: 'regionName',
                title: '行政区域名称',
                minWidth: 110
            }, {
                field: 'regionCode',
                title: '行政区域代码',
                width: 110
            }, {
                field: 'zipCode',
                title: '邮政编码'
            }, {
                field: 'longitude',
                title: '经度'
            }, {
                field: 'latitude',
                title: '纬度'
            }, {
                field: 'validFlag',
                title: '是否有效',
                templet: '#validFlagTpl',
                width: 100,
                unresize: true,
                align: 'center',
                fixed: 'right'
            }, {
                title: '操作',
                width: 60,
                align: 'center',
                fixed: 'right',
                toolbar: '#operateTpl'
            }]],
    done:function () {
    autoSetHeigt()
}
        }));

        //监听是否有无效事件
        form.on('switch(validFlag)', function (obj) {
            common.requestServer('../basRegion/updateBasRegionValidFlag.jo', {
                regionIds: obj.value,
                validFlag: Number(obj.elem.checked)
            }, function (result) {
                common.responseAtcion(result);
            })
        })

        //操作栏操作按钮的事件
        table.on('tool(basRegionListGrid)', function (obj) {
            var row = obj.data
            switch (obj.event) {
                case 'btn_edit':
                    var parendRegionId = getParentRegionId(row.regionId);
                    common.open('$contextPath' + '/basRegion/BasRegionEdit.do?regionId=' + row.regionId + '&parendRegionId=' + parendRegionId, '行政区域表：' + row.regionName, {
                        area: ['70%', '60%']
                    })
                    break;
                case 'btn_delete':
                    common.confirm("确定要删除吗？", function () {
                        common.requestServerHandler('$contextPath' + '/basRegion/delBasRegion.jo', {basRegionIds: row.basRegionId}, "删除成功", function (result) {
                            $('#btn_query').click();
                        })
                    });
                    break;
            }
        });

        // 重置表格高度
        $(window).resize(function () {
            var height = getTableHgt();
            table.reload('basRegionListGrid', {
                height: height
            });
        })

    })
</script>

