<script>
    /*性别限制*/
    var dicDrugNumUnit  = JSON.parse('$dicTools.changeMapToJson($dicData.dicDrugNumUnit)');
    var dicDrugNumUnitDosageUnit  = JSON.parse('$dicTools.changeMapToJson($dicData.dicDrugNumUnitDosageUnit)');
    var dicDoseWay = JSON.parse('$dicTools.changeMapToJson($dicData.dicDoseWay)');//给药途径
    var dicHerbUsage = JSON.parse('$dicTools.changeMapToJson($dicData.dicHerbUsage)');
    var dicPharmacyFreqDayFreq = JSON.parse('$dicTools.changeMapToJson($dicData.dicPharmacyFreqDayFreq)');
    var dicPharmacyFreqWeekFreq = JSON.parse('$dicTools.changeMapToJson($dicData.dicPharmacyFreqWeekFreq)');
    var YES_FLAG = '${CONST.AppConstants.YES_FLAG}';
    layui.config({
        base: '../resource/layuiadmin/'
    }).extend({
        index: 'lib/index'
    }).use(['index', 'form', 'table', 'util','laydate'], function () {
        var $ = layui.$, form = layui.form, table = layui.table, util = layui.util,laydate = layui.laydate;

        // 获取表格高度
        function getTableHgt() {
            return ($('body').height() - $('#wardbed_queryForm').height() - ($('body').height() - $('.layui-fluid').height()) - $('.tool-bottom-fixed').height());
        }

        // 获取查询表单参数对象
        function getQueryParams() {
            return $.extend({validFlag:YES_FLAG
            }, common.serializeObject($('#queryForm')));
        }

        // 查询按钮
        $('#btn_query').click(function () {
            var queryParams = getQueryParams();
            //执行重载
            table.reload('inpatientOrderListGrid', {
                where: queryParams
            });
        })

        // 清空按钮
        $('#btn_clean').click(function () {
            common.cleanForm('wardbed_queryForm');
        })

        // 新增按钮
        $('#btn_add').click(function () {
            common.open('$contextPath' + '/inpatient/wardBedEdit.do', '病区床位设置表', {
                area: ['70%', '50%']
            })
        })

        //表格设置
        table.render($.extend(singlePageTable, {
            elem: '#inpatientOrderListGrid',
            height: getTableHgt(),
            url: contextPath + '/inpatient/inpatientOrderJsonList.jo',
            where: getQueryParams(),
            cols: [[{
                type:'checkbox',
                fixed: 'left',
                LAY_CHECKED:true,
                width : 30,
            }, {
                field : 'exeOrderStartTime',
                fixed: 'left',
                width : 130,
                title : '开始时间',
                templet :function (row) {
                    return util.toDateString(row.exeOrderStartTime, 'yyyy-MM-dd HH:mm');
                }
            }, {
                field : 'orderName',
                fixed: 'left',
                minWidth : 200,
                title : '医嘱项目'
            }, {
                field : 'dosage',
                width : 80,
                title : '每次剂量/用量',
                templet :function (row) {
                    return row.dosage ? (row.dosage + (dicDrugNumUnitDosageUnit[row.dosageUnit] || '')) : '';
                }
            },{
                field : 'usageQuantity',
                title : '每日剂量',
                width : 80,
                templet :function (row) {
                    return row.usageQuantity ? (row.usageQuantity + (dicDrugNumUnitDosageUnit[row.dosageUnit] || '')) : '';

                }
            },{
                field : 'pharmacyFreqId',
                title : '频次',
                width : 50
            },{
                field : 'firstDayDosage',
                title : '首日次数',
                width : 80
            },{
                field : 'doseWayCode',
                title : '用法',
                width : 80,
                templet : function (row) {
                    return dicDoseWay[row.doseWayCode] || dicHerbUsage[row.herbUsageWay] || "";
                }
            },{
                field : 'exeOrderEndTime',
                title : '停嘱时间',
                width : 140,
                templet :function (row) {
                    return row.exeOrderEndTime ? util.toDateString(row.exeOrderEndTime, 'yyyy-MM-dd HH:mm:ss') : "";
                }
            },{
                field : 'endDayDosage',
                title : '#requiredTag()末日次数',
                fixed: 'right',
                width : 80,
                templet:"#endDayDosageTpl"
            }]],done:function () {
                var that = this;
                updateExeOrderEndTime(that);
                updatePharmacyFreqToEndDayDosage(that);
                updateZeroToEndDayDosage(that);
                updateEndDayDosage(that);
                $("#btn_updatePharmacyFreqToEndDayDosage").click();
            }
        }));

        //更新频次到末日次数
        function updateExeOrderEndTime(that) {
            if(!that.elem || !that.id) return ;
            //日期时间选择器
            laydate.render({
                elem: '#exeOrderEndTime'
                ,type: 'datetime'
                ,format: 'yyyy-MM-dd HH:mm:ss'
                ,trigger: 'click' //采用click弹出
                ,done: function(value, date, endDate){
                    that.elem.next().find('td[data-field="exeOrderEndTime"] .layui-table-cell').each(function (index) {
                        table.cache[that.id][index].exeOrderEndTime = value;
                        $(this).text(value);
                    });
                }
            });
        }
        //更新频次到末日次数
        function updatePharmacyFreqToEndDayDosage(that) {
            if(!that.elem || !that.id) return ;
            $("#btn_updatePharmacyFreqToEndDayDosage").click(function () {
                that.elem.next().find('.layui-table-fixed :input[name="endDayDosage"]').each(function (index) {
                    var pharmacyFreqId = table.cache[that.id][index].pharmacyFreqId;
                    $(this).val(dicPharmacyFreqDayFreq[pharmacyFreqId] || dicPharmacyFreqWeekFreq[pharmacyFreqId] || '').change();
                });
            })
        }

        //更新0到末日次数
        function updateZeroToEndDayDosage(that) {
            if(!that.elem || !that.id) return ;
            $("#btn_updateZeroToEndDayDosage").click(function () {
                that.elem.next().find('.layui-table-fixed :input[name="endDayDosage"]').each(function () {
                    $(this).val(0).change();
                });
            })
        }

        //更新末日次数事件
        function updateEndDayDosage(that) {
            if(!that.elem || !that.id) return ;
            that.elem.next().find('.layui-table-fixed :input[name="endDayDosage"]').each(function (index) {
                var inNumber = $(this);
                buildInNumber(inNumber);
                //同步更新缓存对应的值
                inNumber.on('input propertychange change',function(){
                    table.cache[that.id][index][inNumber.prop('name')] = $(this).val();
                });
            });
        }

        //关闭窗口
        $('#btn_close').click(function (){
            var index = parent.layer.getFrameIndex(window.name);
            parent.layer.close(index);
        });

        //绑定数字输入事件
        function buildInNumber(elem) {
            var inputNumber = $(elem);
            var options = {
                min: Number(inputNumber.attr('min')) || 0 //最小值
                ,max: Number(inputNumber.attr('max')) || 99 //最大值，默认100
                ,step: Number(inputNumber.attr('step')) || 1 //间隔值
            }
            var SLIDER_INPUT_BTN = 'layui-slider-input-btn';

            //点击加减输入框
            inputNumber.next('.' + SLIDER_INPUT_BTN).children('i').each(function(index){
                $(this).off('click').on('click', function(){
                    var inputValue = inputNumber.val();
                    if(index == 1){
                        inputValue = inputValue - options.step < options.min
                            ? options.min
                            : Number(inputValue) - options.step;
                    }else{
                        inputValue = Number(inputValue) + options.step > options.max
                            ? options.max
                            : Number(inputValue) + options.step;
                    };
                    inputNumber.val(inputValue.toFixed(options.step.toString().indexOf('.') != -1 ? options.step.toString().split(".")[1].length : 0));
                    inputNumber.change();
                });
            });
        }

        //提交表单
        function saveInpatientOrder () {
            var inpatientOrders = table.checkStatus('inpatientOrderListGrid').data;
            if($("#inpatientOrderListGrid+").find('.layui-table-fixed :input[name="endDayDosage"]').filter(function () {return !$(this).val();}).first().addClass('layui-form-danger').focus().length) {
                common.msg('请填写末日次数', 0);
                return;
            }
            var pharmacyFreqIdFlag = false;
            $("#inpatientOrderListGrid+").find('.layui-table-fixed :input[name="endDayDosage"]').each(function () {
                var that = this;
                var index = $(that).parents('tr').data('index');
                var endDayDosage = $(that).val();
                var inpatientOrder = inpatientOrders[index];
                if(endDayDosage > (dicPharmacyFreqDayFreq[inpatientOrder.pharmacyFreqId] || dicPharmacyFreqWeekFreq[inpatientOrder.pharmacyFreqId] || '')) {
                    pharmacyFreqIdFlag = true;
                    $(that).addClass('layui-form-danger').focus();
                    return true;
                }
            });
            if (pharmacyFreqIdFlag) {
                common.msg('末日次数不能大于频次', 0);
                return;
            }
            if(!$('#exeOrderEndTime').val()) {
                common.msg('请选择停止时间', 0);
                $('#exeOrderEndTime').addClass('layui-form-danger').focus();
                return;
            }
            var exeOrderStartTimeFlag = false;
            $.each(inpatientOrders, function (index, inpatientOrder) {
                if (util.toDateString(inpatientOrder.exeOrderStartTime, 'yyyy-MM-dd HH:mm:ss') > inpatientOrder.exeOrderEndTime) {
                    exeOrderStartTimeFlag = true;
                    return true;
                }
            });
            if (exeOrderStartTimeFlag) {
                common.msg('停嘱时间不能小于开始时间', 0);
                return;
            }
            var inpatientOrderParams = $.map(inpatientOrders, function (item) {
                return {orderId : item.orderId, exeOrderEndTime : item.exeOrderEndTime, endDayDosage : item.endDayDosage}
            });
            var settings = {
                "url": contextPath + "/inpatient/updateStopFlag.jo",
                "method": "POST",
                "contentType": "application/json",
                "data": JSON.stringify({inpatientOrderEditInfos: inpatientOrderParams}),
                error: function(res){
                    jqueryPostError(res);
                }
            };
            $.ajax(settings).done(function (result) {
                if (result.code == '0') {
                    common.msg('保存成功。', 1, function () {
                        $('#btn_refresh', window.parent.document).click()
                        var index = parent.layer.getFrameIndex(window.name)
                        parent.layer.close(index)
                    })
                } else {
                    common.alert(result.msg, 2)
                }
            });
        }//save function
         // 保存按钮
        $('#btn_save').click(function () {
            saveInpatientOrder()
        })

        // 重置表格高度
        $(window).resize(function () {
            var height = getTableHgt();
            table.reload('inpatientOrderListGrid', {
                height: height
            });
        })

    })
</script>

