<script>

    //挂号类别 6    义诊
    var REGISTERTYPE_FREE = "$!{CONST.AppConstants.REGISTERTYPE_FREE}";
    var dicPatientKind = JSON.parse('$dicTools.changeMapToJson($dicData.dicPatientKind)')
    var dicPatientClassify = JSON.parse('$dicTools.changeMapToJson($dicData.dicPatientClassify)')
    var dicSex = JSON.parse('$dicTools.changeMapToJson($dicData.dicSex)')
    //职称收费单价
    var dicRegisterDoctorDutyUnitPrice = JSON.parse('$dicTools.changeMapToJson($dicData.dicRegisterDoctorDutyUnitPrice)');
    //病历费名称
    var dicOffice = JSON.parse('$dicTools.changeMapToJson($dicData.dicOffice)');
    var dicVisitTimeFlag = JSON.parse('$dicTools.changeMapToJson($dicData.dicVisitTimeFlag)');
    var dicVisitTimeRange = JSON.parse('$dicTools.changeMapToJson($dicData.dicVisitTimeRange)');
    var dicRegisterType = JSON.parse('$dicTools.changeMapToJson($dicData.dicRegisterType)');
    var dicDoctorPost = JSON.parse('$dicTools.changeMapToJson($dicData.dicDoctorPost)');
    var dicConsultingRoom = JSON.parse('$dicTools.changeMapToJson($dicData.dicConsultingRoom)');
    layui.config({
        base: '../resource/layuiadmin/' //静态资源所在路径
    }).extend({
        index: 'lib/index', //主入口模块
        xmSelect: 'xm-select'
    }).use(['index', 'form', 'laydate', 'table', 'util', 'xmSelect'], function () {
        var $ = layui.$
                , laypage = layui.laypage
                , form = layui.form
                , laydate = layui.laydate
                , table = layui.table,
                util = layui.util,
                xmSelect = layui.xmSelect;

        //按日期范围查询
        laydate.render({
            elem: '#arrangeDutyDateRange',
            range: true,
            min: util.toDateString(new Date().setDate(new Date().getDate() + 1), 'yyyy-MM-dd'),
            value: util.toDateString(new Date().setDate(new Date().getDate() + 1), 'yyyy-MM-dd') + ' - ' + util.toDateString(new Date().setDate(new Date().getDate() + 7), 'yyyy-MM-dd')
        });

        // 门诊科室
        var doctorOfficeIds = xmSelect.render({
            el: '#doctorOfficeIds',
            size: 'small',
            theme: {
                color: '#5FB878'
            },
            name: 'doctorOfficeIds',
            filterable: true, //开启搜索
            remoteSearch: true,//开启自定义搜索
            paging: true,  //启用分页
            pageRemote: true,//远程分页
            remoteMethod: function (val, cb, show, pageIndex) { //数据处理
                common.requestServer('../outpatient/arrangeDutyOfficePageData.jo', {
                    pageNumber: pageIndex,
                    keyWord: val
                }, function (result) {
                    var data = $.map(result.code == "0" ? result.data : [], function (item) {
                        return {name: item.arrangeDutyOfficeName, value: item.arrangeDutyOfficeId};
                    })
                    cb(data, result.count ? Math.ceil(result.count / 20) : 0);
                })
            }
        });


        $("#btn_clean").click(function () {
            common.cleanForm('queryForm');
            doctorOfficeIds.setValue([]);
            $('#arrangeDutyDateRange').val(util.toDateString(new Date().setDate(new Date().getDate() + 1), 'yyyy-MM-dd') + ' - ' + util.toDateString(new Date().setDate(new Date().getDate() + 7), 'yyyy-MM-dd'));
        });
        $("#btn_query").click(function () {
            loadOnDutyDoctorTable();
        });
        $("#btn_cancel").click(function () {
            cancelAppoint();
        });

        // 获取查询表单参数对象
        function getQueryParams() {
            return $.extend({
                arrangeDutyDate: "",
                arrangeDutyType: "",
                doctorOfficeIds: '',
                consultingRoomId: '',
                doctorId: ''
            },common.serializeObject($("#queryForm"), ['arrangeDutyDateRange']));
        }

        //号源表格
        var appointResourceTable = table.render({
            elem: '#appointResourceTable'
            , data:[]
            , page: false //开启分页
            , height: TableHgt()
            , cols: [[ //表头
                {field: 'serialNum', title: '序号', width: 60}
                , {
                    field: 'visitBeginTime', title: '时间'
                }
                , {field: 'patientName', title: '患者'}
            ]]
        });

        //值班医生表格
        var doctorTable = table.render({
            elem: '#onDutyDoctorTable'
            , where: getQueryParams()
            , url: '../outpatient/arrangeDutyDoctorListData.jo' //数据接口
            , limit: 10
            , height: getTableHgt()
            , cols: [[ //表头
                {
                    title: '工作时间 ', width: 160, templet: function (row) {
                        if (row.arrangeDutyDate && row.arrangeDutyType) {
                            var date = new Date(row.arrangeDutyDate);
                            return layui.util.toDateString(row.arrangeDutyDate, 'yyyy-MM-dd') + ' 星期' + numToCapital(date.getDay()) + dicVisitTimeFlag[row.arrangeDutyType];
                        }
                    }
                }
                , {
                    field: 'consultingRoomName', title: '诊室', minWidth: 200, templet: function (row) {
                        return row.consultingRoomName + "(" + row.doctorOfficeName + ")";
                    }
                }
                , {
                    field: 'doctorName', title: '医生 ', minWidth: 150, templet: function (row) {
                        return row.doctorName + " " + (dicDoctorPost[row.doctorPost] || '');
                    }
                }
                , {field: 'limitCount', title: '总数', width: 60}
                , {
                    title: '剩余', width: 60, templet: function (row) {
                        return row.limitCount - row.appointCount - row.registerCount;
                    }
                }
                , {field: 'appointNum', title: '序号', width: 60}
                , {field: 'appointCount', title: '已约', width: 60}
            ]]
        });

        // 获取表格高度
        function getTableHgt() {
            return ($('body').height() - $('#queryForm').height() - 90)
        }

        function TableHgt() {
            return ($('body').height() - 94)
        }

        $(window).resize(function () {
            table.reload('onDutyDoctorTable', {
                height: getTableHgt()
            })
            table.reload('appointResourceTable', {
                height: TableHgt()
            })
        })


        function loadOnDutyDoctorTable() {
            //当日值班医生
            queryParams = getQueryParams();
            var options = {url: '../outpatient/arrangeDutyDoctorListData.jo', where: queryParams};
            //执行重载
            doctorTable.reload(options);
        }

        //监听值班医生行单击事件
        table.on('row(onDutyDoctorTable)', function (obj) {
            var data = obj.data;
            $('#q_arrangeDutyDate').text(util.toDateString(data.arrangeDutyDate, 'yyyy-MM-dd')).data('value', util.toDateString(data.arrangeDutyDate, 'yyyy-MM-dd'));
            $('#q_visitTimeFlag').text(dicVisitTimeFlag[data.arrangeDutyType] +' '+ dicVisitTimeRange[data.arrangeDutyType]).data('value', data.arrangeDutyType);
            var dateStr = getFormatDate(new Date(data.arrangeDutyDate), 'yyyy-MM-dd');//值班日期字符串
            var params = {
                arrangeDutyDate: dateStr,
                arrangeDutyType: data.arrangeDutyType,
                doctorOfficeId: data.doctorOfficeId,
                consultingRoomId: data.consultingRoomId,
                doctorId: data.doctorId,
            };

            loadAppointResourceTable(params);
            setArrangeDutyDoctor(obj.tr, obj.data);
            //标注选中样式
            obj.tr.addClass('layui-table-click').siblings().removeClass('layui-table-click');
        });

        /* 设置挂号医生表单 */
        function setArrangeDutyDoctor(tr, data) {
            //表单初始赋值
            data.visitOfficeId = data.doctorOfficeId;
            data.visitOfficeName = data.doctorOfficeName;
            data.registerTypeName = dicRegisterType[data.registerType];
            data.roomName = dicConsultingRoom[data.consultingRoomId];
            data.consultingRoomId = data.consultingRoomId;
            data.visitDoctorId = data.doctorId;
            data.visitDoctorName = data.doctorName;
            data.visitDate = util.toDateString(data.arrangeDutyDate, 'yyyy-MM-dd');
            data.visitTimeFlag = data.arrangeDutyType;
            data.visitDoctorPost = data.doctorPost;
            data.visitDoctorPostName = dicDoctorPost[data.doctorPost] ||'';
            form.val('registerForm', data)
            regFee();
        }

        //重载号源表和预约记录
        function loadAppointResourceTable(params) {
            //当日值班医生
            var options = {url: '../register/appointResourceListData.jo', where: params};

            //执行重载
            appointResourceTable.reload(options);
        }

        //监听号源表行单击事件
        table.on('row(appointResourceTable)', function (obj) {
            var data = obj.data;
            var flag = Boolean(data.registerId);
            //如果有预约记录，加载患者信息到表单
            $('#btn_save').prop('disabled', flag)[flag ? 'addClass' : 'removeClass']('layui-btn-disabled');
            $('#btn_cancel').prop('disabled', !flag)[!flag ? 'addClass' : 'removeClass']('layui-btn-disabled');
            if(flag) {
                form.val('registerForm', data)
            }
            loadFormByAppoint(obj.data);
            //标注选中样式
            obj.tr.addClass('layui-table-click').siblings().removeClass('layui-table-click');
        });

        //加载预约记录信息到编辑表单中
        function loadFormByAppoint(data) {
            var patientInfo = $("#registerForm");
            //隐藏域
            patientInfo.find("#visitBeginTime").val(data.visitBeginTime);
            patientInfo.find("#visitEndTime").val(data.visitEndTime);
            patientInfo.find("#serialNum").val(data.serialNum);
            patientInfo.find("#registerId").val(data.registerId);
        }

        //获取当前就诊患者信息
        window.getPatientInfo = function (params) {
            common.requestServer('$contextPath/register/findPatientIndex.jo', params, function (result) {
                if (result.code == '0') {
                    var patientInfo = $.extend({}, result.data.patient, result.data.patientIndex)
                    patientInfo.patientSexName = dicSex[patientInfo.patientSex]//性别名称
                    patientInfo.patientClassifyName = dicPatientClassify[patientInfo.patientClassify]
                    patientInfo.patientKindName = dicPatientKind[patientInfo.patientKind]
                    patientInfo.emergencyTreatmentFee = '0.00'
                    var emergencyTreatmentFee
                    //成人 急诊
                    if ($('#registerType').val() == 2 && patientInfo.patientClassify == 1) {
                        patientInfo.emergencyTreatmentFee = '5.00'
                    }
                    if (patientInfo.patientBirth) {
                        patientInfo.patientBirth = util.toDateString(patientInfo.patientBirth, 'yyyy-MM-dd')
                    }
                    //表单初始赋值
                    form.val('registerForm', patientInfo)
                    if ("" != $("patientId").val() && "" != $("visitDoctorId").val()) {
                        regFee();
                    }
                } else {
                    $('.patient-search').click();
                }
            })
        }

        //监听就诊卡号 回车（Enter）键自动根据查询患者信息事件
        $('#keyWordEqu').on('keydown', function (event) {//给输入框绑定按键事件
            if (event.key == 'Enter') {
                var params = {
                    keyWordEqu: $(this).val()
                }//就诊卡号
                getPatientInfo(params)
                return false
            }
        })

        //监听图标查询就诊卡号click事件 选择患者弹窗
        $('.patient-search').click(function () {
            var title = '选择患者'
            var content = '../patient/selectPatient.do'
            findPatient(content, title)
        })

        /* 查询患者 */
        function findPatient(content, title) {
            common.open(content, title, {
                area: ['80%', '80%'],
                btn: ['确定'],
                yes: function (index, layero) {
                    var iframeWindow = window['layui-layer-iframe' + index], submitID = 'LAY-user-back-submit',
                        submit = layero.find('iframe').contents().find('#' + submitID)

                    var checkStatus = iframeWindow.layui.table.checkStatus('patientTable')
                    if (checkStatus.data.length == 0) {
                        layer.msg('请选择患者', {
                            icon: 5
                        })
                        return
                    }
                    var params = {
                        patientId: checkStatus.data[0].patientId
                    }//就诊卡号
                    getPatientInfo(params)
                    layer.close(index)
                },
                success: function (layero, index) {
                    $('#keyWordEqu').val() && layero.find('iframe').contents().find('#q_keyWord').val($('#keyWordEqu').val())
                }
            })
        }

        /* 挂号缴费方式 */
        form.on('radio(selfPayInWay)', function (data) {
            setselfPayInWay(data.value)
        });

        //获取银行交易索引号
        function getTradingCode () {
            var data = {
                "orgId": 99,
                "partnerId": "1003"
            };
            $.ajax({
                type: "POST",
                url: '$contextPath/register/getTradingCode.jo',
                data: data,
                dataType: "json",
                async: false,
                success: function (result) {
                    if (result) {
                        $("#authCode").val(result.data);
                    }
                }
            });
        }

        /* 缴费方式 */
        function setselfPayInWay(selfPayInWayVal) {
            //不是现金的查询支付状态
            if (selfPayInWayVal != 1) {
                if (selfPayInWayVal == 4) {
                    getTradingCode();
                } else {
                    $("#authCode").val("");
                }
                $('.payCode').show();

                $("#changeChargeDiv").hide();
                //设置实收金额为应收金额
                $("#actualCharge").val($("#diagnosisFee").val());
                $("#actualCharge").attr("readonly","readonly");
                //清空找零
                $("#changeCharge").val("");
            } else {
                //现金支付展示实收金额
                $('.payCode').hide();
                $("#changeChargeDiv").show();
                $("#actualCharge").removeAttr("readonly");
                $("#authCode").val("");
            }
        }

        //计算找零
        $("#actualCharge").on('keyup', function (event) {
            calculateCharge();
        });

        //计算找零金额
        function calculateCharge () {
            var actualCharge = $("#actualCharge").val();
            var diagnosisFee = $("#diagnosisFee").val();
            var changeCharge = Number(actualCharge - diagnosisFee).toFixed(2);
            //$("#changeCharge").val(changeCharge);
            form.val('registerForm', {
                changeCharge: changeCharge,
                actualCharge: actualCharge
            });
        }

        //付款码
        $('#btn_authCode').click(function () {
            var authCode = $('#authCode').val()
        });

        //计算应收费用
        function regFee() {
            if ("" == $("#patientId").val() || "" == $("#visitDoctorId").val()) {
                return;
            }
            var params = {patientId: $("#patientId").val(), visitDoctorId: $("#visitDoctorId").val(), registerType: $("#registerType").val()};
            common.requestServer('$contextPath/bas/getDoctorPostFee.jo', params, function (result) {
                if (result.code == '0') {
                    if (null != result.data) {
                        $("#chargeName").val(result.data.chargeName);
                        $("#registerFee").val(Number(result.data.unitPrice).toFixed(2));
                    } else {
                        $("#chargeName").val("");
                        $("#registerFee").val("");
                    }
                    var registerFee = 0;
                    if (REGISTERTYPE_FREE != $(':radio[name="registerType"]:checked').val()) {
                        registerFee = $('#registerFee').val();
                    }
                    var emergencyTreatmentFee = $('#emergencyTreatmentFee').val() || 0
                    var payableSum = Number(Number(registerFee) + Number(emergencyTreatmentFee)).toFixed(2);// 应交款  诊查费+病历 // 应收合计
                    $('#diagnosisFee').val(payableSum);

                    //现金收款-应收款改变时计算对应找零
                    var selfPayInWay = $("input[name=selfPayInWay]:checked").val();
                    if (selfPayInWay == 1) {
                        calculateCharge();
                    } else {
                        //设置实收金额为应收金额
                        $("#actualCharge").val($("#diagnosisFee").val());
                    }
                } else {
                    common.alert(result.msg, 0);
                }
            });
        }

        //验证参数
        function validateParameter(data) {
            if (!data.visitCardNo) {
                return '就诊卡号不能为空'
            }
            if (!data.visitCardType) {
                return '诊疗类型不能为空'
            }
            if (!data.visitOfficeId) {
                return '科室不能为空'
            }
            if (!data.visitDate) {
                return '就诊时间不能为空'
            }
            if (!data.selfPayInWay) {
                return '缴费方式不能为空'
            }
            if (!data.actualCharge) {
                return '实收金额不能为空'
            }
            if (data.changeCharge < 0) {
                return '实收金额不能小于应收合计'
            }
        }

        // 挂号按钮
        function saveRegister() {
            var params = common.serializeObject($('#registerForm'));
            if(!params.visitBeginTime || !params.visitEndTime) {
                common.msg('请选择号源', 0);
                return ;
            }
            var validMsg = validateParameter(params);
            if (validMsg) {//验证必填参数
                common.msg(validMsg, 0);
                return false;
            }

            common.confirm('是否确认预约挂号？', function () {
                common.requestServer(contextPath + '/register/saveRegisterAndPay.jo', params, function (result) {
                    if (result.code === '0') {
                        layer.msg('预约挂号成功', {icon: 1, time: 2000});
                        $("#onDutyDoctorTable + div").find("tr.layui-table-click").click();
                        common.cleanForm('wardbed_queryForm');
                    } else {
                        common.alert(result.msg);
                    }
                });
            });
        }
        // 挂号按钮
        function saveRegister() {
            common.openLoad();
            var url = contextPath + '/register/saveRegisterAndPay.jo',
                    params = common.serializeObject($('#registerForm')), msg = '预约成功！'
            if(!params.visitBeginTime || !params.visitEndTime) {
                common.msg('请选择号源', 0);
                return ;
            }

            var validMsg = validateParameter(params)
            if (validMsg) {//验证必填参数
                common.alertError(validMsg);
                return false
            }
            common.requestServerHandler(url, params, msg, function (result) {
                common.closeLoad();
                $("#onDutyDoctorTable + div").find("tr.layui-table-click").click();
                common.cleanForm('wardbed_queryForm');
            })

        }

        //监听提交
        form.on('submit(btn_save)', function (data) {
            saveRegister();
            return false;
        });

        //取消预约
        function cancelAppoint() {
            var registerId = $("#registerForm").find("#registerId").val();
            if (registerId) {
                common.requestServer('$contextPath/register/deleteRegister.jo?registerIds=' + registerId, function (result) {
                    if (result.code == "0") {
                        common.alertCall("取消预约成功。", 1, function () {
                            location.reload();//刷新页面
                        });
                    } else {
                        common.alert(result.msg, 0);
                    }
                });
            } else {
                common.alert('请选择已预约的号源，再点击取消预约', '0');
            }
        }

    })

    //星期号数阿拉伯转中文
    function numToCapital(num) {
        var chinaNum = [ '日','一', '二', '三', '四', '五', '六'];
        return chinaNum[num];
    }
</script>
