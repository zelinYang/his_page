<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${SessionSysPortal.appTitle}门诊护士站</title>
    #parse("./common/pageCss.vm")
    #parse("./common/pageJs.vm")
    <style type="text/css">
        /*价格字体颜色*/

        .recipeTotalPrice {
            display: inline;
            left: 20px;
            position: absolute;
            top: 6px;
            font-size: 20px;
            font-weight: 700;
        }

        .recipeTotalPriceValue {
            color: red;
        }

        /*就诊卡号查询输入框*/
        .visitCardNo {
            width: 220px;
        }

        /*诊断输入框*/
        .outpatientDiagnosis {
            width: 568px;
        }

        .layui-form-label {
            padding: 5px 10px 5px 0;
            width: 60px;
        }


        .visit-patient {
            border: 1px solid #D2D2D2;
            padding: 3px 12px;
            background-color: #fff;
        }

        .visit-patient table.reg_patient_info tr {
            height: 20px;
        }

        .visit-patient table.reg_patient_info tr th {
            padding: 0 5px;
            font-weight: 700;
            margin-left: 20px;
            font-size: 14px;
            width: 100px;
            text-align: right;
        }

        .visit-patient table.reg_patient_info tr td {
            padding: 0 5px;
            width: 150px;
            font-size: 14px;
        }
        .visit-patient table.reg_patient_info th, .visit-patient table.reg_patient_info td { line-height: 24px;}

        .visit-patient .layui-badge {
            position: absolute;
        }

        .tool-bottom {
            padding-top: 10px;
            text-align: center
        }

        .layui-nav.layui-bg-white,
        .layui-nav.layui-bg-white .layui-nav-item a {
            color: black
        }

        .layui-nav .layui-nav-item {
            line-height: 40px
        }

        .layui-nav.layui-bg-white .layui-nav-more {
            border-color: black transparent transparent
        }

        .layui-nav.layui-bg-white .layui-nav-mored {
            border-color: transparent transparent black
        }

        @media screen and (max-width: 1400px) {
            .outpatientDiagnosis {
                width: 312px;
            }
        }

        @media screen and (max-width: 1024px) {
            .visitCardNo {
                width: 210px;
            }
        }

        @media screen and (max-width: 768px) {
            .outpatientDiagnosis {
                width: 268px;
            }

            /*就诊卡号查询输入框*/
            .visitCardNo {
                width: 120px;
            }

            .tool-bottom-fixed .layui-input-inline {
                width: 100px;
            }

            .visitCardNo {
                width: 120px
            }
        }
        /*患者信息，不换行，显示省略号*/
        .reg_patient_info {
            white-space: nowrap;
            text-overflow: ellipsis;
            overflow: hidden;
        }

        .layui-tab-card > .layui-tab-content > .layui-tab-item {
            height: calc(100% - 60px);
        }
        .layui-tab-card > .layui-tab-content > .layui-tab-item > iframe {
            width: 100%;
            height: 100%;
            border: none;
        }
    </style>
</head>
<body>

<div class="layui-content-wrapper">
    <div class="layui-fluid">
        <div class="layui-row layui-col-space10 full-height">
            <div class="layui-col-md4 layui-col-xs4 full-height">
                <!--搜索条件 开始-->
                <form id="patient_queryForm" class="layui-form p-t-sm p-b-xs">
                    <div class="layui-form-item">
                        <div class="layui-inline">
                            <label class="layui-form-label">日期</label>
                            <div class="layui-input-inline wd-120">
                                #formLayDateInput("applyTime" "" " maxlength='17' autocomplete='off' class='layui-input' ")
                            </div>
                        </div>
                        <div class="layui-inline">
                            <div class="layui-input-inline wd-220">
                                #formTextInput("keyWord" "" "class='layui-input' id='q_keyWord' autocomplete='off' maxlength='40' placeholder='姓名/电话/身份证/就诊卡号/医保号/健康卡' lay-tips='支持姓名/电话/身份证/就诊卡号/社保号/健康卡查询'")
                            </div>
                        </div>
                        <div class="layui-inline layui-btn-group">
                            <button type="button" id="btn_query" class="layui-btn layui-btn-sm" lay-tips="查询"><i class="layui-icon layui-icon-search"></i></button>
                            <button type="button" id="btn_clean" class="layui-btn layui-btn-sm" lay-tips="清 空"><i class="iconfont icon-qingchu"></i></button>
                        </div>
                    </div>
                </form>
                <!--搜索条件 结束-->
                <div class="layui-tab layui-tab-card b-shadow-n border-n m-n" lay-filter="outPatientType">
                    <ul class="layui-tab-title btn p-t-sm p-l-sm">
                        <li lay-id="treatRecordToday" class="layui-this ">今日预约</li>
                        <li lay-id="treatApplyList" >治疗患者</li>
                    </ul>
                    <div class="layui-tab-content layui-bg-white p-n p-t-sm">
                        <div class="layui-tab-item layui-show">
                            <!-- 列表表格 begin -->
                            <table id="patientGeneralListGrid" lay-filter="patientGeneralListGrid"></table>
                            <!--  列表表格 end -->
                        </div>
                    </div>
                </div>
            </div>
            <div class="layui-col-md8 layui-col-xs8 full-height">
                <form class="layui-form" lay-filter="registerForm" id="registerForm">
                    <div class="visit-patient m-t-sm">
                        <table class="reg_patient_info ">
                            <tr>
                                <th><span id="lowIncomeFlag" class="layui-badge" style="display: none;">贫困户</span><span>姓名：</span></th>
                                <td><span class="patientName" onclick="showPatientInfo();"></span></td>
                                <th><span>性别：</span></th>
                                <td><span class="patientSexText"></span></td>
                                <th><span>就诊卡号：</span></th>
                                <td><span class="visitCardNo"></span></td>
                                <th><span>性质：</span></th>
                                <td><span class="patientKindText"></span></td>
                                <th><span>年龄：</span></th>
                                <td><span class="patientAge"></span></td>
                            </tr>
                            <tr>
                                <th><span>地址：</span></th>
                                <td><span class="patientAddr"></span></td>
                                <th style="text-align: right;"><span>过敏：</span></th>
                                <td>
                                    <div class="drugAllergy-area layui-hide">
                                        <div class="drugAllergy">无过敏</div>
                                    </div>
                                </td>
                                <th style="text-align: right;"><span>诊断：</span></th>
                                <td>
                                    <div class="firstDiagnosis"></div>
                                </td>
                                <th style="text-align: right;"><span>诊疗费用：</span></th>
                                <td>
                                    <span class="fee"></span>元
                                </td>
                            </tr>
                        </table>
                    </div>
                </form>
                <div class="layui-tab layui-tab-card full-height outpatientFeeNav b-shadow-n m-b-n" lay-filter="outpatientNurseNav">
                    <ul class="layui-tab-title">
                        <li lay-id="injection" class="layui-this">治疗</li>
                        <li lay-id="outpatientEmr" href="../emr/commonEmrTemplate.do?emrTlpId=$!{dicData.dicSysPro.get('EMR_TLP_ID_OUTPATIENT')}&view=patient/emr/commonEmrShow&showBtn=0" >门诊病历</li>
                        <li lay-id="outpatientDiagnose">诊断</li>
                        <li lay-id="medicineRecipe">处方</li>
                        <li lay-id="patientDrugAllergy">过敏史</li>
                        <li lay-id="outpatientTech">医技申请 </li>
                        <li lay-id="techReportInspectDetail" href="../outpatient/techReport.do">报告查阅 </li>
                        <li lay-id="recipeTcm">草药 </li>
                        <li lay-id="medicalDoc" href="../outpatient/medicalDoc.do">医疗文书 </li>
                    </ul>
                    <div class="layui-tab-content overflow-y-h layui-bg-white p-n" id="outpatientNurseTabc">
                        <div class="layui-tab-item layui-show">
                            <!-- 列表表格 begin -->
                            <table id="outpatientInjectionListGrid" lay-filter="outpatientInjectionListGrid"></table>
                            <!--  列表表格 end -->
                            <!--按钮-->
                            <div class="layui-row p-xs text-left" id="centerBar">
                                <button type="button" class="layui-btn layui-btn-sm " id="btn_treatEdit">
                                    <i class="layui-icon">&#xe642;</i>
                                    治疗记录
                                </button>
                            </div>
                            <!-- 列表表格 begin -->
                            <table id="infusionsItemListGrid" lay-filter="infusionsItemListGrid"></table>
                            <!--  列表表格 end -->
                        </div>
                        <div lay-id="outpatientEmr" class="layui-tab-item">
                            <iframe src="" ></iframe>
                        </div>
                        <div class="layui-tab-item">
                            <table id="outpatientDiagnoseListGrid" lay-filter="outpatientDiagnoseListGrid"></table>
                        </div>
                        <div class="layui-tab-item">
                            <table id="outpatientRecipeItemListGrid" lay-filter="outpatientRecipeItemListGrid"></table>
                        </div>
                        <div class="layui-tab-item">
                            <table id="patientDrugAllergyListGrid" lay-filter="patientDrugAllergyListGrid"></table>
                        </div>
                        <div class="layui-tab-item">
                            <table id="outpatientTechListGrid" lay-filter="patientDrugAllergyListGrid"></table>
                        </div>
                        <div class="layui-tab-item" lay-id="techReportInspectDetail">
                            <iframe src="" ></iframe>
                        </div>
                        <div class="layui-tab-item">
                            <table id="recipeTcmListGrid" lay-filter="patientDrugAllergyListGrid"></table>
                        </div>
                        <div class="layui-tab-item" lay-id="medicalDoc">
                            <iframe src="" ></iframe>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- 皮试结果模板 -->
<script type="text/html" id="skinTestResultFlagTpl">
    {{# if (d.skinTestResultFlag) { }}
    <span {{SKIN_TEST_RESULT_FLAG_POSITIVE == d.skinTestResultFlag ? 'style="color: red;"':'style="color: blue;"'}}> {{dicSkinTestResultFlag[d.skinTestResultFlag]}}</span>
    {{# } else { }}
    {{# if (YES_FLAG == d.skinTestFlag) { }}
    <input type="radio" lay-filter="skinTestResultFlag" name="validFlag_{{d.recipeItemId}}" medicineid="{{d.medicineId}}" title="阴性(-)" value="{{SKIN_TEST_RESULT_FLAG_NEGATIVE}}" >
    <input type="radio" lay-filter="skinTestResultFlag" name="validFlag_{{d.recipeItemId}}" medicineid="{{d.medicineId}}" title="阳性(+)" value="{{SKIN_TEST_RESULT_FLAG_POSITIVE}}" >
    {{# } else { }}
    <span>/</span>
    {{# } }}
    {{# } }}
</script>
<!-- 性别模板 -->
<script type="text/html" id="sexTpl">
    <span class="layui-badge {{dicSexClass[d.patientSex] || ''}}">{{ dicSex[d.patientSex] || '' }}</span>
</script>
##parse("./treat/treatManage.js.vm") <!-- 页面js -->
<script>
    var YES_FLAG = "$!{CONST.AppConstants.YES_FLAG}";
    var NO_FLAG = "$!{CONST.AppConstants.NO_FLAG}";

    var DOSE_WAY_CODE_INJECTION = "$!{CONST.AppConstants.DOSE_WAY_CODE_INJECTION}";

    var ORDER_TYPE_INJECTION_MEDICINE = "$!{CONST.AppConstants.ORDER_TYPE_INJECTION_MEDICINE}";
    var SKIN_TEST_RESULT_FLAG_NEGATIVE = "$!{CONST.AppConstants.SKIN_TEST_RESULT_FLAG_NEGATIVE}";
    var SKIN_TEST_RESULT_FLAG_POSITIVE = "$!{CONST.AppConstants.SKIN_TEST_RESULT_FLAG_POSITIVE}";
    var dicYesNo = JSON.parse('$dicTools.changeMapToJson($dicData.dicYesNo)');
    var dicTreatDicTypeId = JSON.parse('$dicTools.changeMapToJson($dicData.dicTreatDicTypeId)');
    //性别
    var dicSex = JSON.parse('$dicTools.changeMapToJson($dicData.dicSex)');
    var dicPatientKind = JSON.parse('$dicTools.changeMapToJson($dicData.dicPatientKind)');
    var dicMedicineTypeInOrder = JSON.parse('$dicTools.changeMapToJson($dicData.dicMedicineTypeInOrder)');

    //挂号类型
    var dicRegisterType = JSON.parse('$dicTools.changeMapToJson($dicData.dicRegisterType)');
    var dicInfusionsFinishFlag = JSON.parse('$dicTools.changeMapToJson($dicData.dicInfusionsFinishFlag)');
    var dicPayFeeState = JSON.parse('$dicTools.changeMapToJson($dicData.dicPayFeeState)');
    var dicDrugNumUnitDosageUnit = JSON.parse('$dicTools.changeMapToJson($dicData.dicDrugNumUnitDosageUnit)');
    var dicDrugNumUnit = JSON.parse('$dicTools.changeMapToJson($dicData.dicDrugNumUnit)');
    var dicDoseWay = JSON.parse('$dicTools.changeMapToJson($dicData.dicDoseWay)');
    var dicPharmacyFreqId = JSON.parse('$dicTools.changeMapToJson($dicData.dicPharmacyFreqId)');
    var dicSkinTestResultFlag = JSON.parse('$dicTools.changeMapToJson($dicData.dicSkinTestResultFlag)');
    var dicTransfuseWay = JSON.parse('$dicTools.changeMapToJson($dicData.dicTransfuseWay)');
    var dicOutpatientRecipeType = JSON.parse('$dicTools.changeMapToJson($dicData.dicOutpatientRecipeType)');
    var dicSkinTestFlag = JSON.parse('$dicTools.changeMapToJson($dicData.dicSkinTestFlag)');
    var dicOutTechExamState = JSON.parse('$dicTools.changeMapToJson($dicData.dicOutTechExamState)');
    var dicHerbUsage = JSON.parse('$dicTools.changeMapToJson($dicData.dicHerbUsage)');
    var dicAccountBookTcmType = JSON.parse('$dicTools.changeMapToJson($dicData.dicAccountBookTcmType)');
    var dicBodyPartClassifyLis = JSON.parse('$dicTools.changeMapToJson($dicData.dicBodyPartClassifyLis)');
    var dicTreatDicTypeId = JSON.parse('$dicTools.changeMapToJson($dicData.dicTreatDicTypeId)');
    var dicPatientType = JSON.parse('$dicTools.changeMapToJson($dicData.dicPatientType)');

    //性别 样式字典
    var dicSexClass = {
        1: 'layui-bg-blue',
        2: 'layui-bg-orange',
        0: 'layui-bg-gray'
    }
    /**父页面的菜单点击要注意清空和修改操作、子页面休息修改保存，也会更新此信息**/
    var curPatient =  {}; //患者对象
    //全局对象=grobalModel： {patientId:'患者id',registerId:'挂号记录ID',outpatientId:'门诊就诊ID',urgencyFlag:'急诊标识'}
    var grobalModel = {patientId:'',registerId:'',outpatientId:'',urgencyFlag:0,recipeId:'',treatReportId:'',treatFlag:'',treatApplyId:''}
    var selectRegId = 0;
    /******全局对象 end***********************************************************/
    var curOutpatient;//当前门诊日志
    var getDrugAllergy;
    var showAllergy;
    var showFirstDiagnosis;
    var showDiagnosis

    var curRow = [];//当前页数组列表
    var curRows = [];//当前页数组列表

    //显示当前就诊患者信息
    function getPatient(patientId) {
        var patientInfo;
        $.ajax({
            type: "POST",
            url: '$contextPath/patient/findPatient.jo',
            data: {patientId:patientId},
            dataType:"json",
            async:false,//同步 请求
            success: function(result){
                patientInfo = result.data;
                if (patientInfo) {
                    grobalModel.patientId = patientInfo.patientId;
                    if (patientInfo.patientSex) {
                        patientInfo.patientSexText = dicSex[patientInfo.patientSex];
                    }
                    if (patientInfo.patientKind) {
                        patientInfo.patientKindText = dicPatientKind[patientInfo.patientKind];
                    }
                }
            },
            error: function(res){
                jqueryPostError(res);
            }
        });//ajax end
        return patientInfo;
    }
    //显示患者地址
    showPatientAddr = function(){
        var patientAddr = $('.patientAddr');
        patientAddr.attr('title',patientAddr.html());
        patientAddrHtml = common.strLimit(patientAddr.html(),15,'...');
        patientAddr.html(patientAddrHtml);
    }
    showAllergy = function(allergyDrug){
        var reg = /、$/gi;
        allergyDrug = allergyDrug.replace(reg,"");
        $('.drugAllergy').attr('title',allergyDrug);
        allergyDrug = common.strLimit(allergyDrug,10,'...');
        $('.drugAllergy').html(allergyDrug);
    }
    //显示当前就诊患者过敏信息
    function showDrugAllergy(result,allergyDrugName) {
        var drugAllergy = '';
        if ((result.data == null || result == '') && allergyDrugName == '') {
            $('.drugAllergy').html(drugAllergy);
            return false;
        }
        if(result.data){
            $(result.data).each(function(index, data) {
                drugAllergy += data.allergyDrugName + '、';
            });
            showAllergy(drugAllergy);
        }

        if(allergyDrugName){
            showAllergy(allergyDrugName);
        }
    }

    //获取当前就诊患者过敏信息
    getDrugAllergy =  function(patientId) {
        var patientInfo;
        $.ajax({
            type: "POST",
            url: '$contextPath/patient/patientDrugAllergyJsonList.jo',
            data: {patientId:patientId},
            dataType:"json",
            async:false,//同步 请求
            success: function(result){
                showDrugAllergy(result);
            },
            error: function(res){
                jqueryPostError(res);
            }
        });//ajax end
        return patientInfo;
    }

    showDiagnosis = function(firstDiagnosisResult){
        if(!firstDiagnosisResult) return;
        var reg = /、$/gi;
        firstDiagnosisResult = firstDiagnosisResult.replace(reg,"");
        $('.firstDiagnosis').attr('title',firstDiagnosisResult);
        firstDiagnosisResult = common.strLimit(firstDiagnosisResult,10,'...');
        $('.firstDiagnosis').html(firstDiagnosisResult);
    }
    //设置诊断内容
    showFirstDiagnosis = function(outpatientResult, firstDiagnosis) {
        var firstDiagnosisResult = '';
        if((outpatientResult==null || outpatientResult.data==null || outpatientResult == '') && firstDiagnosis == ''){
            firstDiagnosisResult = '未诊断';
            $('.firstDiagnosis').html(firstDiagnosisResult);
        }

        if(outpatientResult && outpatientResult.data){
            if(outpatientResult.data.length > 1){
                $(outpatientResult.data).each(function(index, data){
                    firstDiagnosisResult += (index+1) + '、' + data.diseaseDiagnosisName + '，   ';
                });
                firstDiagnosisResult = common.clearLastChar(firstDiagnosisResult,'，   ');
            } else if(outpatientResult.data.length == 0){
                firstDiagnosisResult = '未诊断';
            } else {
                firstDiagnosisResult = outpatientResult.data[0].diseaseDiagnosisName;
            }
            showDiagnosis(firstDiagnosisResult);
        }
        if(firstDiagnosis){
            showDiagnosis(firstDiagnosis);
        }
    }

    //显示当前患者诊断信息
    getFirstDiagnosis = function(registerId){
        var registerInfo;
        $.ajax({
            type: "POST",
            url: '$contextPath/outpatient/diagnosisListData.jo',
            data: {registerId: registerId},
            dataType:"json",
            async:false,//同步 请求
            success: function(result){
                showFirstDiagnosis(result);
            },
            error: function(res){
                jqueryPostError(res);
            }
        });//ajax end
        return registerInfo;
    }

    //刷新诊疗费用
    function countOutpatientFee(registerId) {
        if (!registerId) {
            return;
        }
        $.ajax({
            type: "POST",
            url: '$contextPath/outpatientFee/countOutpatientFee.jo',
            data: {registerId : registerId},
            dataType:"json",
            async:false,//同步 请求
            success: function(result){
                if (result.code == '0') {
                    $('.fee').html(result.data);
                }
            } ,error: function(res){  jqueryPostError(res); }
        });//ajax end
    }

    //显示当前就诊患者信息
    function showCurPatient(registerId, patientId) {
        curPatient = getPatient(patientId);
        if (curPatient){
            for (var key in curPatient) {
                $('.'+key).html(curPatient[key]);
            }
            if (curPatient.lowIncomeFlag === '1') {
                $('#lowIncomeFlag').show();
            } else {
                $('#lowIncomeFlag').hide();
            }
            $('.patient').removeClass('hide');//显示或者隐藏患者信息
            $('.patient-no').addClass('hide');//显示或者隐藏患者信息
        } else {
            $('.patient').addClass('hide');//显示或者隐藏患者信息
            $('.patient-no').removeClass('hide');//显示或者隐藏患者信息
        }
        showPatientAddr();
        getDrugAllergy(patientId);
        getFirstDiagnosis(registerId);
        countOutpatientFee(registerId);
        $('.drugAllergy-area').removeClass('layui-hide');
    }
    //显示当前就诊患者信息
    function getOutpatient() {
        var outpatient;
        grobalModel.outpatientId = '';
        $.ajax({
            type: "POST",
            url: contextPath + '/outpatient/findOutpatient.jo',
            data: {registerId: grobalModel.registerId},
            dataType: "json",
            async: false,//同步 请求
            success: function (result) {
                outpatient = result.data;
                if (outpatient) {
                    grobalModel.outpatientId = outpatient.outpatientId;
                    curOutpatient = outpatient;
                } else {
                    curOutpatient = null;
                }
            },
            error: function (res) {
                jqueryPostError(res);
            }
        });//ajax end
        return outpatient;
    }

    //设置全局 急诊标识 urgencyFlag
    function setUrgencyFlag(registerType) {
        grobalModel.urgencyFlag = registerType == 5 ? 1 :0;//4=门诊
    }

    //行选择处理
    function rowSelect(row) {
        curRow = row;//设置全局的当前行
        grobalModel.treatFlag = row.treatFlag;
        grobalModel.treatReportId = row.treatReportId;
        grobalModel.treatApplyId = row.treatApplyId;
        grobalModel.registerId = row.registerId;//设置全局的
        grobalModel.recipeId = row.recipeId;//设置全局的
        showCurPatient(row.registerId, row.patientId);//显示患者信息
        $('.wardBedNo').text(row.wardBedNo);
        $('.btn_outpatientNurseBed[data-value="add"]')[row.wardBedNo ? 'addClass': 'removeClass']('layui-hide');
        $('.btn_outpatientNurseBed[data-value="chagne"],.btn_outpatientNurseBed[data-value="cancel"]')[row.wardBedNo ? 'removeClass': 'addClass']('layui-hide');
        setUrgencyFlag(row.registerType);
        getOutpatient();
    }
</script>
<script>
    layui.config({
        base: '../resource/layuiadmin/'
    }).extend({
        index: 'lib/index'
    }).use(['index', 'form', 'table', 'laydate', 'util'], function () {
        var $ = layui.$, form = layui.form, table = layui.table, laydate = layui.laydate, util = layui.util;
        var element = layui.element;

        // 获取表格高度
        function getPatientTableHgt() {
            return ($('body').height() - $('#patient_queryForm').height() - $('.layui-tab-title.btn').height() - 50);
        }

        //回车触发查询
        $("#q_keyWord").keydown(function (event) {
            if (event.keyCode == 13) {
                $('#btn_query').click();
                return false;
            }
        });

        // 查询按钮
        $('#btn_query').click(function () {
            var queryParams = getQueryParams();

            recordList.where = queryParams;
            treatApply.where = queryParams
            var outPatientType = $('.layui-tab[lay-filter="outPatientType"] > .layui-tab-title > .layui-this').attr("lay-id");
            switch (outPatientType) {
                case "treatRecordToday":
                    //执行重载
                    table.render(recordList);
                    break;
                case "treatApplyList":
                    //执行重载
                    table.render(treatApply);
                    break;
            }

        })
        // 清空按钮
        $('#btn_clean').click(function () {
            common.cleanForm('patient_queryForm');
            $("#region_breadcrumb").html('');
        })

        // 治疗记录修改
        $("#btn_treatEdit").click(function () {
            if (!grobalModel.registerId) {
                common.msg('请选择患者！', 0);
                return;
            }
            if (grobalModel.treatReportId && grobalModel.treatFlag == 0) {
                common.open('$contextPath' + '/surgery/treatRecordEdit.do?treatReportId=' + grobalModel.treatReportId, '治疗记录编辑',{ area: ['600px', '70%'] });
            } else{
                common.msg('当前选择的患者已经完成本次治疗！', 0);
                return;
            }
        })

        window.editTreatRecordCallBack = function(res){
            table.reload('outpatientInjectionListGrid');
            table.reload('infusionsItemListGrid');
            table.reload('patientGeneralListGrid');
        }

        //分配修改床位
        $(".btn_outpatientNurseBed").click(function () {
            if (!grobalModel.registerId) {
                common.msg('请选择患者！', 0);
                return;
            }
            var outpatientNurseBedFlag = $(this).data("value");
            var title = $(this).text();
            if("add" == outpatientNurseBedFlag || "chagne" == outpatientNurseBedFlag ) {
                //分配修改床位
                common.open('../outpatient/outpatientNurseLeaveBed.do?registerId=' + grobalModel.registerId, title,{ area: ['30%', '50%'] });
            } else {
                //取消床位
                common.confirm("确定要取消当前床位吗?", function () {
                    common.requestServer(contextPath + '/outpatient/delLeaveBen.jo', {
                        registerId: grobalModel.registerId
                    }, function (result) {
                        common.responseAtcion(result);
                        $('#btn_query').click();
                    })
                });
            }
        })

        element.on('tab(outPatientType)', function(){
            $('#btn_query').click();
        });

        // 获取查询表单参数对象
        function getQueryParams() {
            var params = {
                exeOfficeId: '',
                therapyAppointTime: layui.util.toDateString(new Date(),'yyyy-MM-dd'),
                treatApplyListFlag: false
            };
            return $.extend(params, common.serializeObject($('#patient_queryForm')));
        }
        var recordList = $.extend({}, basePageTable, {
            elem: '#patientGeneralListGrid',
            height: getPatientTableHgt(),
            url: contextPath + '/surgery/getTreatRecordListPageData.jo',
            where: getQueryParams(),
            cols: [[{
                type: 'numbers'
            }, {
                field: 'patientType',
                title: '患者类型',
                templet:function (d) {
                    return dicPatientType[d.patientType] || "";
                }
            }, {
                field: 'patientSex',
                title: '性别',
                width: 60,
                templet: '#sexTpl'

            }, {
                field: 'patientName',
                title: '患者姓名',
                minWidth: 70
            }, {
                field: 'visitCardNo',
                title: '就诊卡号'
            }, {
                title: '申请医生',
                minWidth: 70,
                templet: function (row) {
                    return row.applyDoctorName// + "("+ row.exeOfficeName +")"
                }
            }, {
                field: 'therapyAppointTime',
                title: '预约日期',
                minWidth: 85,
                templet: function (row) {
                    return row.therapyAppointTime ? util.toDateString(row.therapyAppointTime, 'yyyy-MM-dd') : '';
                }
            }
            ]]
        });

        var treatApply = $.extend({}, basePageTable, {
            elem: '#patientGeneralListGrid',
            height: getPatientTableHgt(),
            url: contextPath + '/surgery/treatApplyPageData.jo',
            where: getQueryParams(),
            cols: [[{
                type: 'numbers'
            }, {
                field: 'patientType',
                title: '患者类型',
                templet:function (d) {
                    return dicPatientType[d.patientType] || "";
                }
            }, {
                field: 'patientSex',
                title: '性别',
                width: 60,
                templet: '#sexTpl'

            }, {
                field: 'patientName',
                title: '患者姓名',
                minWidth: 70
            }, {
                field: 'visitCardNo',
                title: '就诊卡号',
                minWidth: 100
            }, {
                field: 'surgeryName',
                title: '操作名称',
                minWidth: 100
            }, {
                field: 'treatPart',
                title: '操作部位',
                minWidth: 100
            }, {
                field: 'involvedMedicine',
                title: '介入物',
                minWidth: 100
            }, {
                title: '申请医生',
                field: 'applyDoctorName',
                minWidth: 70,
            }, {
                field: 'applyTime',
                title: '申请日期',
                minWidth: 85,
                templet: function (res) {
                    return res.applyTime ? layui.util.toDateString(res.applyTime, "yyyy-MM-dd") : ''
                }
            }]], done: function () {
            }
        });
        //表格设置 普通患者
        table.render(recordList);

        //普通患者监听行单击事件
        table.on('row(patientGeneralListGrid)', function (obj) {
            var row = obj.data;
            rowSelect(row);
            $('.layui-tab[lay-filter="outpatientNurseNav"] > .layui-tab-title li.layui-this').click();
        });
        //监听导航菜单点击事件
        element.on('tab(outpatientNurseNav)', function(elem){
            var layId = $(this).attr('lay-id');
            var href = $(this).attr('href');
            if (!grobalModel.registerId) {
                common.msg('请选择患者！', 0);
                return;
            }
            switch(layId) {
                case 'injection':
                    //针剂处方明细
                    table.reload('outpatientInjectionListGrid', {
                        url: contextPath + '/outpatient/outpatientTechList.jo',
                        where: {
                            registerId: grobalModel.registerId,
                            patientId: grobalModel.patientId,
                            techApplyId: grobalModel.treatApplyId,
                            payFeeFlag: YES_FLAG
                        }
                    })
                    table.reload('infusionsItemListGrid', {
                        url: contextPath + '/surgery/treatRecordPageData.jo',
                        where: {
                            registerId: grobalModel.registerId,
                            patientId: grobalModel.patientId,
                            treatFlag: '1'
                        }
                    })
                    break;
                case 'outpatientDiagnose':
                    //诊断记录
                    table.reload('outpatientDiagnoseListGrid', {
                        url: contextPath + '/outpatient/diagnosisListData.jo',
                        where: {
                            registerId: grobalModel.registerId
                        }
                    })
                    break;
                case 'medicineRecipe':
                    //处方
                    table.reload('outpatientRecipeItemListGrid', {
                        url: contextPath + '/outpatient/recipeItemPageData.jo',
                        where: {
                            patientId: grobalModel.patientId
                        }
                    })
                    break;
                case 'patientDrugAllergy':
                    //过敏
                    table.reload('patientDrugAllergyListGrid', {
                        url: contextPath + '/patient/patientDrugAllergyJsonList.jo',
                        where: {
                            registerId: grobalModel.registerId
                        }
                    })
                    break;
                case 'outpatientTech':
                    //医技申请
                    table.reload('outpatientTechListGrid', {
                        url: contextPath + '/outpatient/outpatientTechList.jo',
                        where: {
                            registerId: grobalModel.registerId
                        }
                    })
                    break;
                case 'recipeTcm':
                    //草药
                    table.reload('recipeTcmListGrid', {
                        url: contextPath + '/outpatient/recipeTcmListData.jo',
                        where: {
                            registerId: grobalModel.registerId
                        }
                    })
                    break;
                default:
                    reqIframe(layId, href);
            }
        });

        //iframe请求页
        function reqIframe(layId,url) {
            var destIframe = $('div[lay-id="'+layId+'"] iframe');
            common.openLoad();
            destIframe.attr('src',url + (url.indexOf("?") != -1 ? "&" : "?") + $.param(grobalModel)).load(function () {
                common.closeLoad();
            });
        }
        // 获取表格高度
        function getOutpatientRecipeItemTableHgt() {
            return ($('body').height() - $('.visit-patient').height() - $('#centerBar').height()  - 80)/2;
        }

        //表格设置 针剂
        table.render($.extend({}, basePageTable, {
            elem: '#outpatientInjectionListGrid',
            height: getOutpatientRecipeItemTableHgt(),
            data:[],
            parseData: function (res) { //res 即为原始返回的数据
                console.log(res)
                res.data = $.map(res.data, function (outpatientTech) {
                    return $.map(outpatientTech.outpatientTechItems, function (outpatientTechItem) {
                        outpatientTechItem.billMoney = outpatientTech.billMoney;
                        outpatientTechItem.LisSampleName = dicBodyPartClassifyLis[outpatientTechItem.lisSpecimenUnite] || '';
                        outpatientTechItem.outpatientTechName = outpatientTech.techApplyName;
                        outpatientTechItem.techState = outpatientTech.techState;
                        outpatientTechItem.techExamApply = outpatientTech.techExamApply;
                        outpatientTechItem.payFeeFlag = outpatientTech.payFeeFlag;
                        outpatientTechItem.applyFeeReturnFlag = outpatientTech.applyFeeReturnFlag;
                        return outpatientTechItem;
                    });
                });
                console.log(res);
                return res;
            }, cols: [[ //表头
                {field: 'outpatientTechId', title: '门诊医技ID', hide: true}
                , {
                    field: 'makeOrderTime', title: '开单时间', minWidth: '130', templet: function (row) {
                        return util.toDateString(row.makeOrderTime, 'yyyy-MM-dd HH:mm');
                    }
                }

                , {
                    field: 'payFeeFlag', title: '缴费状态', templet: function (row) {
                        return dicPayFeeState[row.payFeeFlag] || "";
                    }
                }
                , {field: 'outpatientTechName', title: '项目分类'}
                , {field: 'chargeGroupName', title: '项目名称'}
                , {field: 'orderName', minWidth: '250', title: '项目明细'}

                , {
                    field: 'unitPrice', title: '单价',
                    templet: function (row) {
                        return common.toMoney(row.unitPrice, 2);
                    }
                }
                , {
                    field: 'billMoney', title: '总价',
                    templet: function (row) {
                        return common.toMoney(row.billMoney, 2);
                    }
                }
                , {field: 'exeOfficeName', title: '执行科室'}
                , {field: 'lisSampleName', title: '样本'}
                , {
                    field: 'techState', title: '单据状态',
                    templet: function (row) {
                        return dicOutTechExamState[row.techState] || "";
                    }
                }
                , {
                    field: 'remark', title: '备注'
                }
                , {
                    field: 'urgentFlag', title: '加急',
                    templet: function (row) {
                        return dicYesNo[row.urgentFlag] || "";
                    }
                }
            ]]
            //res = 如果是异步请求数据方式，res即为你接口返回的信息。 curr = 当前页码   count= 得到数据总量
            , done: function (res, curr, count) {
                var that = this;
                //获取医技费用
                $('.totalPriceValue').html($.map(res.data, function (item) {
                    if (item.validFlag === '1') {
                        return item.unitPrice;
                    }
                }).reduce(function (total, num) {
                    return total + num;
                }, 0).toFixed(2));
                //存放计算医技表格数据需要合并的医技 id
                var outpatientTechIds = $.unique($.map(res.data, function (item) {
                    return item.outpatientTechId;
                }));
                $.each(res.data, function (index, item) {
                    var trDom = that.elem.next().find('.layui-table-main tr[data-index="' + index + '"]');
                    if (item.validFlag === '0') {
                        trDom.addClass('del-tr');
                        trDom.children(":first").children(":first").html('');
                    }
                    if (item.applyFeeReturnFlag === '1') {
                        trDom.addClass('apply-refund');
                    }
                    if (item.applyFeeReturnFlag === '3') {
                        trDom.addClass('apply-refund');
                    }
                });
                //合并显示单元格字段
                var groupCells = ['makeOrderTime', 'payFeeFlag', 'exeOfficeName', 'outpatientTechName', 'chargeGroupName', 'billMoney', 'lisSampleName', 'techState', 'remark', 'urgentFlag'];
                var oldData = [];
                //合并关键字段
                var groupKeyWord = 'outpatientTechId';
                $.each(res.data, function (index, contains) {
                    var allTrs = that.elem.next().find('.layui-table-main tr td[data-field="' + groupKeyWord + '"]>.layui-table-cell:contains(' + contains.outpatientTechId + ')').filter(function () {
                        return $(this).text() == contains.outpatientTechId;
                    }).parents('tr');
                    $.each(groupCells, function (i, field) {
                        if (oldData.contains(contains.outpatientTechId + field)) {
                            return;
                        }
                        var trs = that.elem.next().find('.layui-table-main tr td[data-field="' + groupKeyWord + '"]>.layui-table-cell:contains(' + contains.outpatientTechId + ')').filter(function () {
                            return $(this).text() == contains.outpatientTechId;
                        }).parents('tr');
                        trs.find('td[data-field="' + field + '"]').first().attr('rowspan', trs.length).end().not(":first").remove();
                        oldData.push(contains.outpatientTechId + field);
                    })
                    //移入背景颜色
                    allTrs.hover(function () {
                        allTrs.addClass('layui-table-hover');
                    }, function () {
                        allTrs.removeClass('layui-table-hover');
                    })
                });
            }
        }));
        form.on('radio(skinTestResultFlag)', function(obj){
            obj.elem.checked = false;
            form.render();
            common.confirm("确定要设置皮试结果为【" + dicSkinTestResultFlag[obj.value] +"】吗？确认后不能更改！", function () {
                obj.elem.checked = !obj.elem.checked;
                form.render();
                var recipeItemId = $(obj.elem).attr('name').split("_")[1];
                var medicineId = $(obj.elem).attr("medicineid");
                var recipeItemIds = new Array();
                //把选中皮试药物medicineId一致的处方明细一起设置皮试结果
                $.each(table.cache["outpatientInjectionListGrid"], function(i, data) {
                    if (data.recipeItemId == recipeItemId) {
                        recipeItemIds.push(data.recipeItemId);
                    } else if (data.medicineId == medicineId && data.needSkinTestFlag == YES_FLAG) {
                        recipeItemIds.push(data.recipeItemId);
                    }
                });
                common.requestServer(contextPath + '/skintest/saveSkinTest.jo', {
                    recipeItemIds: recipeItemIds.join(','),
                    skinTestResultFlag: obj.value
                }, function (result) {
                    common.responseAtcion(result);
                })
            });
            /* var recipeItemId = $(data.elem).attr('name').split("_")[1];
             var params = {
                 recipeItemIds: recipeItemId,
                 skinTestResultFlag: data.value
             }
             common.requestServer(contextPath + '/skintest/saveSkinTest.jo', params, function (result) {
                 if (result.code == '0') {
                     common.msg('保存成功。', 1, function () {
                         table.reload('outpatientInjectionListGrid');
                     })
                 } else {
                     common.alert(result.msg, 0);
                 }
             })*/
        });
        //监听门诊使用事件
        form.on('switch(outpatientUsageFlag)', function (obj) {
            obj.elem.checked = !obj.elem.checked
            form.render();
            common.confirm("确定要操作吗？", function () {
                obj.elem.checked = !obj.elem.checked;
                form.render();
                common.requestServer('../bas/basChargeItemUpdateOutpatientUsageFlag.jo', {
                    chargeItemId: obj.value,
                    outpatientUsageFlag: Number(obj.elem.checked)
                }, function (result) {
                    common.responseAtcion(result);
                })
            });
        })

        //针剂处方 监听行单击事件
        // table.on('row(outpatientInjectionListGrid)', function (obj) {
        //     var checkStatus = table.checkStatus('outpatientInjectionListGrid')
        //             ,data = checkStatus.data; //获取选中的数据
        //     var recipeItemIds = $.map(data, function (item) {
        //         return item.recipeItemId
        //     })
        //     recipeItemIds.push(obj.data.recipeItemId);
        //     //输液记录
        //     table.reload('infusionsItemListGrid', {
        //         url: contextPath + '/infusions/infusionsItemListData.jo',
        //         where: {
        //             recipeItemIds: recipeItemIds.join(',')
        //         }
        //     })
        //     //标注选中样式
        //     obj.tr.addClass('layui-table-click').siblings().removeClass('layui-table-click');
        // });

        //设置皮试结果
        $('.btn_skinTestResultFlag').click(function () {
            var checkStatus = table.checkStatus('outpatientInjectionListGrid')
                ,data = checkStatus.data; //获取选中的数据
            if(data.length === 0){
                common.msg('请选择皮试结果项', iconType.warn);
                return;
            }
            var recipeItemIds = $.map(data, function (item) {
                return item.recipeItemId
            })

            var skinTestResultFlag = $(this).data("value");
            var params = {
                recipeItemIds: recipeItemIds.join(),
                skinTestResultFlag: skinTestResultFlag
            }
            common.requestServer(contextPath + '/skintest/saveSkinTest.jo', params, function (result) {
                if (result.code == '0') {
                    common.msg('保存成功。', 1, function () {
                        table.reload('outpatientInjectionListGrid');
                    })
                } else {
                    common.alert(result.msg, 0);
                }
            })
        })

        //执行输液
        $(".btn_infusionsItemFlag").click(function() {
            var checkStatus = table.checkStatus('outpatientInjectionListGrid')
                ,data = checkStatus.data; //获取选中的数据
            if(data.length === 0){
                common.msg('请选择输液项', iconType.warn);
                return;
            }

            var result = true;
            $.each(data, function (index, item) {
                if (YES_FLAG == item.infusionsFinishFlag) {
                    common.msg('当前【'+ item.orderName +'】项输液已完成！', iconType.warn);
                    result = false;
                    return false;
                } else if (YES_FLAG != item.payFeeFlag) {
                    common.msg('当前【'+ item.orderName +'】项未缴费，不能输液！', iconType.warn);
                    result = false;
                    return false;
                } else if (YES_FLAG == item.skinTestFlag) {
                    common.msg('当前【'+ item.orderName +'】项为皮试用药，不能输液！', iconType.warn);
                    result = false;
                    return false;
                }
            })
            if (!result) return false;

            var recipeItemIds = $.map(data, function (item) {
                return item.recipeItemId
            })
            var infusionsItemFlag = $(this).data("value");
            var title = $(this).text()
            //例子1
            layer.prompt({ title: title +'时间', success:function (layero) {
                        layero.find('input').attr('placeholder', 'yyyy-MM-dd HH:mm:ss')
                        laydate.render({
                            elem: layero.find('input').get(0)
                            ,trigger: 'click' //采用click弹出
                            //,position: 'static'
                            ,type: 'datetime'
                            ,value:new Date()
                        });
                    }},
                function(time, index, elem){
                    var params = {
                        recipeItemId:recipeItemIds.join(),
                        skinTestId:grobalModel.skinTestId,
                        infusionsItemFlag: infusionsItemFlag,
                    }
                    if (infusionsItemFlag) {
                        params.startTime = time;
                    } else {
                        params.endTime = time;
                    }
                    common.requestServer(contextPath + '/infusions/saveInfusionsItem.jo', params, function (result) {
                        if (result.code == '0') {
                            common.msg('保存成功。', 1, function () {
                                table.reload('outpatientInjectionListGrid');
                                table.reload('infusionsItemListGrid');
                            });
                        } else {
                            common.alert(result.msg, 0);
                        }
                    })
                    layer.close(index);
                });

        })

        //表格设置 治疗记录
        table.render($.extend({}, basePageTable, {
            elem: '#infusionsItemListGrid',
            height: getOutpatientRecipeItemTableHgt(),
            data:[],
            cols: [[{
                type: 'numbers',
                fixed: 'left'
            }, {
                field: 'treatDicTypeId',
                title: '治疗类型',
                minWidth: 100,
                templet: function (d) {
                    return dicTreatDicTypeId[d.dicTreatDicTypeId] || '';
                }
            }, {
                field: 'treatDicCode',
                title: '治疗项目',
                minWidth: 200
            }, {
                field: 'treatMeasures',
                title: '治疗措施',
                minWidth: 200
            }, {
                field: 'cureBodyPart',
                title: '治疗部位',
                minWidth: 100
            }, {
                field: 'therapyMethod',
                title: '理疗方法',

            }, {
                field: 'therapyTotalTime',
                title: '治疗用时',

            }, {
                field: 'therapyDosage',
                title: '治疗用量',

            }, {
                field: 'therapyFrequency',
                title: '治疗频次',

            }, {
                field: 'therapyReaction',
                title: '治疗反应',

            }, {
                field: 'therapyResult',
                title: '治疗结果',

            }, {
                field: 'therapyNote',
                title: '治疗处置注意事项',

            }, {
                title: '治疗时间',
                width: 150,
                templet: function (d) {
                    return d.therapyTime ? util.toDateString(d.therapyTime, 'yyyy-MM-dd HH:mm') : '';
                }
            }]]
        }));

        // 获取表格高度
        function getOutpatientNurseTableHgt() {
            return ($('body').height() - $('.visit-patient').height() - 80);
        }

        //表格设置 门诊诊断记录
        table.render($.extend({}, basePageTable, {
            elem: '#outpatientDiagnoseListGrid',
            height: getOutpatientNurseTableHgt(),
            data:[],
            cols: [[{
                type: 'numbers'
            },   {
                title: 'ICD',
                field: 'diseaseIcdTcd',
            }, {
                title: '描述性诊断',
                field: 'diseaseDiagnosisDesc',
            }, {
                title: '诊断名称',
                field: 'diseaseDiagnosisName',
            },  {
                title: '诊断医生',
                field: 'makeOrderDoctorName',
            }, {
                title: '诊断时间',
                width: 125,
                templet: function (row) {
                    return row.diagnosisTime ? util.toDateString(row.diagnosisTime, 'yyyy-MM-dd HH:mm') : '';
                }
            }
            ]]
        }));

        //表格设置 处方
        table.render($.extend({}, basePageTable, {
            elem: '#outpatientRecipeItemListGrid',
            height: getOutpatientNurseTableHgt(),
            data:[],
            cols: [[{
                type: 'numbers'
            },{
                field: 'payFeeFlag',
                title: '缴费状态',
                width: 60,
                templet:function (row) {
                    return dicPayFeeState[row.payFeeFlag] || "";
                }
            }, {
                field: 'medicineType',
                title: '类型',
                width: 60,
                templet:function (row) {
                    return dicMedicineTypeInOrder[row.medicineType] || '';
                }
            }, {
                title: '药品名称',
                minWidth: 180,
                templet:function (row) {
                    return row.orderName + (row.skinTestResultFlag ? '【' + (dicSkinTestResultFlag[row.skinTestResultFlag] || "") +'】' : "");
                }
            }, {
                title: '处方类型',
                minWidth: 60,
                templet:function (row) {
                    return dicOutpatientRecipeType[row.recipeType] || ""
                }
            }, {
                title: '是否自带药',
                minWidth: 80,
                templet:function (row) {
                    return dicYesNo[row.orderSelfFlag] || ""
                }
            },  {
                field: 'medicineSpec',
                title: '规格',
                width: 140
            }, {
                title: '每次数量',
                width: 60,
                templet: function (row) {
                    return (row.perOrderCount || "") + " " + (dicDrugNumUnitDosageUnit[row.minMedicineUnit] || "");
                }
            }, {
                title: '每次剂量/用量',
                width: 60,
                templet: function (row) {
                    return (row.dosage || "") + " " + (dicDrugNumUnitDosageUnit[row.dosageUnit] || "");
                }
            }, {
                title: '用法',
                width: 80,
                templet: function (row) {
                    return dicDoseWay[row.doseWayCode] || "";
                }
            }, {
                title: '频次',
                width: 60,
                templet: function (row) {
                    return dicPharmacyFreqId[row.pharmacyFreqId] || "";
                }
            }, {
                title: '每日剂量',
                width: 60,
                templet: function (row) {
                    return (row.usageQuantity || "") + " " + (dicDrugNumUnitDosageUnit[row.dosageUnit] || "");
                }
            }, {
                field: 'orderDay',
                title: '天数',
                width: 40,
            }, {
                title: '总量',
                width: 60,
                templet: function (row) {
                    return (row.giveTotalQuantity || "") + " " + (dicDrugNumUnit[row.giveTotalQuantityUnit] || "");
                }
            }, {
                title: '皮试',
                width: 80,
                templet: function (row) {
                    return dicSkinTestFlag[row.needSkinTestFlag] || ""
                }
            }, {
                field: 'specialTreatment',
                title: '医生说明',
                minWidth: 60
            }, {
                field: 'unitPrice',
                title: '单价',
                width: 60
            }, {
                field: 'actualPrice',
                title: '金额',
                width: 60
            }, {
                field: 'pharmacyName',
                title: '药房',
                width: 60
            }
            ]]
        }));

        //表格设置 过敏史
        table.render($.extend({}, basePageTable, {
            elem: '#patientDrugAllergyListGrid',
            height: getOutpatientNurseTableHgt(),
            data:[],
            cols: [[{
                type: 'numbers'
            },   {
                title: '过敏原',
                field: 'allergyDrugName',
            }, {
                title: '症状',
                field: 'allergySymptom',
            }, {
                title: '程度',
                field: 'severity',
            },  {
                title: '首发时间',
                width: 125,
                templet: function (row) {
                    return row.firstOccurTime ? util.toDateString(row.firstOccurTime, 'yyyy-MM-dd HH:mm') : '';
                }
            }, {
                title: '记录人',
                field: 'createUserName',
                width: 125
            }, {
                title: '记录时间',
                width: 125,
                templet: function (row) {
                    return row.createTime ? util.toDateString(row.createTime, 'yyyy-MM-dd HH:mm') : '';
                }
            }
            ]]
        }));

        //表格设置 医技申请
        table.render($.extend({}, basePageTable, {
            elem: '#outpatientTechListGrid',
            height: getOutpatientNurseTableHgt(),
            data:[],
            cols: [[{
                type: 'numbers'
            },   {
                title: '开单时间1',
                width: 126,
                field: 'makeOrderTime',
                templet: function (row) {
                    return row.makeOrderTime ? util.toDateString(row.makeOrderTime, 'yyyy-MM-dd HH:mm') : '';
                }
            }, {
                title: '缴费状态',
                field: 'payFeeFlag',
                templet:function (row) {
                    return dicPayFeeState[row.payFeeFlag] || "";
                }
            }, {
                title: '项目分类',
                field: 'outpatientTechName',
            },  {
                title: '项目名称',
                field: 'chargeGroupName',
            }, {
                title: '项目明细',
                field: 'orderName',
            }, {
                title: '单价',
                field: 'unitPrice',
            }, {
                title: '总价',
                field: 'billMoney',
            }, {
                title: '执行科室',
                field: 'exeOfficeName',
            }, {
                title: '样本',
                field: 'lisSampleName',
            }, {
                title: '单据状态',
                field: 'techState',
                templet: function (row) {
                    return dicOutTechExamState[row.techState] || "";
                }
            }, {
                title: '备注',
                field: 'remark',
            }, {
                title: '加急',
                field: 'urgentFlag',
                templet: function (row) {
                    return dicYesNo[row.urgentFlag] || "";
                }
            }
            ]]
        }));

        //表格设置 报告查阅
        table.render($.extend({}, basePageTable, {
            elem: '#techReportInspectDetailListGrid',
            height: getOutpatientNurseTableHgt(),
            data:[],
            cols: [[{
                type: 'numbers'
            },   {
                title: '报告项目名称',
                field: 'chineseName',
            }, {
                title: '定量结果',
                field: 'quantitativeResult',
            }, {
                title: '定性结果',
                field: 'qualitativeResult',
            },  {
                title: '标记',
                field: 'qualitativeResult',
                templet : function(d) {
                    return '~';
                }
            }, {
                title: '单位',
                field: 'testItemUnit',
            }, {
                title: '参考值',
                field: 'testItemReference',
            }
            ]]
        }));

        //表格设置 草药
        table.render($.extend({}, basePageTable, {
            elem: '#recipeTcmListGrid',
            height: getOutpatientNurseTableHgt(),
            data:[],
            cols: [[{
                type: 'numbers'
            },   {
                title: '缴费状态',
                field: 'payFeeFlag', templet: function (row) {
                    return dicPayFeeState[row.payFeeFlag] || "";
                }
            }, {
                title: '项目名称',
                field: 'recipeItem.orderName',
                templet :function (row) {
                    console.log(row.validFlag);
                    if(row.recipeItem) {
                        var recipeItem = row.recipeItem.orderName ? row.recipeItem.orderName : '';
                        return recipeItem ;
                    }
                    return '' ;
                }},
                ,{
                    field: 'recipeId',
                    title: '处方ID',
                    hide: true
                },{field : 'herbUsageWay', title : '用法',width: 126,
                    templet :function (row) {
                        if(row.herbUsageWay) {
                            return dicHerbUsage[row.herbUsageWay];
                        }
                        return '' ;
                    }
                },{field : 'recipeType', title : '处方类型',
                    templet :function (row) {
                        if(row.recipeType) {
                            return dicOutpatientRecipeType[row.recipeType];
                        }
                        return '' ;
                    }
                },{field : 'herbUsageClassify', title : '类别',
                    templet :function (row) {
                        if(row.herbUsageClassify) {
                            return dicAccountBookTcmType[row.herbUsageClassify];
                        }
                        return '' ;
                    }
                }
                ,{field : 'orderDay', title : '剂数'}
                ,{field : 'recipeItem.medicineSpec',title:'规格',
                    templet :function (row) {
                        if(row.recipeItem) {
                            return row.recipeItem.medicineSpec ? row.recipeItem.medicineSpec : '';
                        } else {
                            return '';
                        }
                    }
                }
                ,{field : 'recipeItem.dosage', title : '剂量',
                    templet :function (row) {
                        if(row.recipeItem) {
                            if(row.recipeItem.dosageUnit){
                                return row.recipeItem.dosage ? row.recipeItem.dosage + dicDrugNumUnitDosageUnit[row.recipeItem.dosageUnit] : '';
                            }
                        } else {
                            return '';
                        }
                    }
                }
                ,{field : 'takeBoilFlag', title : '代煎',
                    templet :function (row) {
                        if(!row.recipeItem) {
                            return '';
                        } else {
                            return dicYesNo[row.takeBoilFlag] ? dicYesNo[row.takeBoilFlag] : '否';
                        }
                    }
                }
                ,{field : 'diseaseName', title : '中医诊断'}
                ,{field : 'tcmSymptom', title : '中医证候'}
                ,{field : 'herbCookingName', title : '特殊用法',
                    templet :function (row) {
                        if(row.recipeItem) {
                            return row.recipeItem.herbCookingName ? row.recipeItem.herbCookingName: '';
                        } else {
                            return '';
                        }
                    }
                },{field : 'unitPrice', title : '单价',
                    templet :function (row) {
                        if(row.recipeItem) {
                            return row.recipeItem.unitPrice? row.recipeItem.unitPrice: '';
                        }
                        return '';
                    }
                },{field : 'actualPrice', title : '金额',
                    templet :function (row) {
                        if(row.recipeItem) {
                            return row.recipeItem.actualPrice || '';
                        }
                        return '';
                    }
                }
            ]]
        }));

        //表格设置 医疗文书

        var outMainWin = parent; //门诊医生主窗口页面对象
        table.render($.extend({}, basePageTable, {
            elem: '#medicalDocListGrid',
            height: getOutpatientNurseTableHgt(),
            data:[],
            cols: [[{
                type: 'numbers'
            }, {
                title: '填写时间',
                field: 'createTime',
                templet: function (row) {
                    return util.toDateString(row.createTime);
                }
            }, {
                title: '医疗文书名称',
                field: 'emrTlpName',
            },  {
                title: '填写人',
                field: 'diagnosisDoctorName'
            }
            ]]
        }));

        // 重置表格高度
        $(window).resize(function () {
            table.reload('patientGeneralListGrid', {
                height: getPatientTableHgt()
            })
            table.reload('outpatientInjectionListGrid', {
                height: getOutpatientRecipeItemTableHgt()
            })
            table.reload('infusionsItemListGrid', {
                height: getOutpatientRecipeItemTableHgt()
            })
            table.reload('outpatientDiagnoseListGrid', {
                height: getOutpatientNurseTableHgt()
            })
            table.reload('outpatientRecipeItemListGrid', {
                height: getOutpatientNurseTableHgt()
            })
        })
        //动态添加OutNav的tab选项卡
        tabAddOutNav = function(layId,tabTitle,url,force){
            tabAdd(layId, tabTitle, url, force, mainTab.layFilter);
        }
    })
</script>

</body>
</html>
